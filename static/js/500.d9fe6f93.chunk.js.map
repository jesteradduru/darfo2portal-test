{"version":3,"file":"static/js/500.d9fe6f93.chunk.js","mappings":"yJAGO,IAAMA,EAAkB,SAACC,EAAiBC,GAC7C,OAAOD,EAAgBE,SAASD,EACnC,C,4KCQYE,EAAa,WACxB,IAAQH,GAAoBI,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAjB,IAAhCN,gBACFO,GAAWC,EAAAA,EAAAA,MACXC,EAAY,CAChB,CACEC,WAAY,QACZC,YAAY,SAAC,MAAD,IACZC,MAAO,CACL,CAAEC,SAAU,WAAYC,QAAS,kBAAmBC,QAAQ,EAAOC,SAASjB,EAAAA,EAAAA,GAAgBC,EAAiB,mBAC7G,CAAEa,SAAU,QAASC,QAAS,eAAgBC,QAAQ,EAAOC,SAASjB,EAAAA,EAAAA,GAAgBC,EAAiB,kBAG3G,CACEU,WAAY,iBACZC,YAAY,SAAC,MAAD,IACZC,MAAO,KAMX,GAAwCK,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAgB,WACpBD,GAAgBD,EACjB,EAKD,OAHAG,EAAAA,EAAAA,YAAU,WACRd,GAASe,EAAAA,EAAAA,MACV,GAAE,CAACf,KAEF,UAAC,KAAD,CAAWgB,OAAK,EAACC,MAAO,CAACC,SAAU,UAAnC,WACE,SAAC,KAAD,CACEC,UAAU,gBACVC,QAAQ,iBACRC,QAAQ,cACRC,QAAST,EACTA,cAAeA,KAEjB,iBAAKM,UAAU,SAAf,WACE,SAAC,KAAD,CAASjB,UAAWA,EAAWqB,OAAQZ,EAAeE,cAAeA,KACrE,SAAC,KAAD,CAAWW,QAAS,kBAAMZ,GAAe,EAArB,EAApB,UACE,SAAC,KAAD,WAKT,EAED,W","sources":["Helpers/portal_helpers.js","Pages/Portal/AdminPanel/AdminPanel.jsx"],"sourcesContent":["/*\r\n  Portal helper functions\r\n*/\r\nexport const checkPermission = (userPermissions, allowedPermissions) => {\r\n    return userPermissions.includes(allowedPermissions);\r\n}","/*\r\n  This is the Admin Panel Page. \r\n*/\r\nimport React, { useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport {  Container } from \"reactstrap\";\r\nimport {  Topbar, Sidenav } from \"../../../Layouts/Portal\";\r\nimport { BsPersonCircle, BsFillPatchQuestionFill } from \"react-icons/bs\";\r\nimport { checkPermission } from \"../../../Helpers/portal_helpers\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { getUserRolePermission } from \"../../../features/Portal/rolesSlice\";\r\n\r\nexport const AdminPanel = () => {\r\n  const { userPermissions } = useSelector((state) => state.roles);\r\n  const dispatch = useDispatch()\r\n  const navConfig = [\r\n    {\r\n      headerName: \"Users\",\r\n      headerIcon: <BsPersonCircle />,\r\n      links: [\r\n        { linkName: \"Accounts\", linkUrl: \"/admin/accounts\", active: true , hidden: !checkPermission(userPermissions, \"manageAccounts\"), },\r\n        { linkName: \"Roles\", linkUrl: \"/admin/roles\", active: false, hidden: !checkPermission(userPermissions, \"manageRoles\") },\r\n      ],\r\n    },\r\n    {\r\n      headerName: \"Help & Support\",\r\n      headerIcon: <BsFillPatchQuestionFill />,\r\n      links: [\r\n        // { linkName: \"Requests\", linkUrl: \"/admin/requests\" }\r\n      ],\r\n    },\r\n  ];\r\n \r\n  const [isSideNavOpen, setSideNavOpen] = useState(false);\r\n\r\n  const toggleSideNav = () => {\r\n    setSideNavOpen(!isSideNavOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserRolePermission())\r\n  }, [dispatch])\r\n  return (\r\n    <Container fluid style={{overflow: \"hidden\"}}>\r\n      <Topbar\r\n        className=\"bg-dark-green\"\r\n        appName=\"DA-RFO2 PORTAL\"\r\n        navItem=\"Admin Panel\"\r\n        sidenav={toggleSideNav}\r\n        toggleSideNav={toggleSideNav}\r\n      />\r\n      <div className=\"d-flex\">\r\n        <Sidenav navConfig={navConfig} isOpen={isSideNavOpen} toggleSideNav={toggleSideNav}/>\r\n        <Container onClick={() => setSideNavOpen(false)}>\r\n          <Outlet />\r\n        </Container>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"names":["checkPermission","userPermissions","allowedPermissions","includes","AdminPanel","useSelector","state","roles","dispatch","useDispatch","navConfig","headerName","headerIcon","links","linkName","linkUrl","active","hidden","useState","isSideNavOpen","setSideNavOpen","toggleSideNav","useEffect","getUserRolePermission","fluid","style","overflow","className","appName","navItem","sidenav","isOpen","onClick"],"sourceRoot":""}