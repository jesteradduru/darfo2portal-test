{"version":3,"file":"static/js/42.587d080e.chunk.js","mappings":"wSAqIA,UA7GyB,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,UAC1B,GAA6BC,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SACVC,GAAWC,EAAAA,EAAAA,MACjB,GAQIC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,MAAjB,IAPdC,EADF,EACEA,sBACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,WACAC,EANF,EAMEA,WACAC,EAPF,EAOEA,WAEIC,GAAWC,EAAAA,EAAAA,MACjB,GAA4CC,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAyBC,EAAzB,MAEAC,EAAAA,EAAAA,YAAU,WACRjB,GAASkB,EAAAA,EAAAA,IAAe,CAAEpB,OAAAA,EAAQC,SAAAA,IACnC,GAAE,CAACC,IAEJ,IAAMmB,EAAa,mCAAG,8FACFnB,GAASoB,EAAAA,EAAAA,IAAmBf,IAD1B,kBAEZgB,QAAQtB,SAFI,gCAGZC,GAASsB,EAAAA,EAAAA,IAAavB,IAHV,OAIlBa,EAAS,yCAJS,2CAAH,qDAenB,OACE,UAAC,KAAD,CAAWW,UAAU,OAArB,WACE,SAAC,KAAD,CAAcC,OAAQT,EAAkBU,YAAa,kBAAMT,GAAiBD,EAAvB,EAA0CW,UAAWP,KAC1G,UAAC,KAAD,CAAeb,UAAWA,EAAWC,aAAcA,EAAnD,WACE,gDACA,mBACA,UAAC,KAAD,CACEoB,MAAI,EACJC,MAAO,CACLC,gBAAiB,WAHrB,WAME,SAAC,KAAD,CAAWN,UAAU,cAAcO,IAAK,KAAxC,2BAGA,UAAC,KAAD,YACE,4BACE,iBAAMP,UAAU,OAAhB,6BACA,iBAAKA,UAAU,4CAAf,UACGlB,EAAsB0B,WACvB,mBACA,cAAGR,UAAU,iBAAb,sBAAqCf,EAAMwB,cAA3C,YAA4DxB,EAAMyB,aAAlE,cAAoFzB,EAAM0B,sBAG9F,4BACE,iBAAMX,UAAU,OAAhB,wBACA,iBAAKA,UAAU,4CAAf,UACGlB,EAAsB8B,aACvB,kBACC1B,IACC,cAAGc,UAAU,iBAAb,sBACEd,EAAWuB,cADb,YAEIvB,EAAWwB,aAFf,cAGExB,EAAWyB,YAHb,cAIME,IACJ/B,EAAsBgC,iBACtBC,oBAIR,SAAC,KAAD,CACEC,MAAO,iBACPC,OAAQnC,EAAsBoC,UAAWC,EAAAA,EAAAA,GAAWrC,EAAsBoC,YAE5E,mBACA,SAAC,KAAD,CACEE,YAActC,EAAsBsC,cAAeC,EAAAA,EAAAA,GAAevC,EAAsBsC,qBAI7F/C,IACC,eAAG2B,UAAU,YAAb,4EACkE,IADlE,UAEMb,EAAWsB,cAFjB,YAEkCtB,EAAWuB,aAF7C,cAE+DvB,EAAWwB,aAAe,QAG3F,iBAAKX,UAAU,sCAAf,WACE,SAAC,KAAD,IACC3B,GACC,SAAC,IAAD,CACEiD,KAAK,KACLC,MAAM,UACNC,KAAMpC,GAAa,SAAC,KAAD,CAASmC,MAAM,UAAa,SAC/CE,QAtEY,SAACC,GACvBA,EAAEC,iBACFlC,GAAiBD,EAClB,EAoEWoC,MAAM,SAAC,MAAD,OAGR,SAAC,KAAD,YAMX,C","sources":["Pages/DTS/ViewActionStatus/ViewActionStatus.jsx"],"sourcesContent":["// View Action Taken Status Page\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { BsChevronRight } from \"react-icons/bs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container, Card, CardText, CardTitle, Spinner } from \"reactstrap\";\r\nimport {\r\n  getActionTaken,\r\n  reforwardForAction,\r\n} from \"../../../features/dts/action/actionSlice\";\r\nimport {\r\n  AttachmentsContainer,\r\n  BackButton,\r\n  ImageGallery,\r\n  NextTaskButton,\r\n} from \"../../../Layouts/DTS\";\r\nimport { Confirmation, ContentLoader, IconatedButton } from \"../../../Layouts/Portal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { taskComplete } from \"../../../features/dts/tasks/tasksSlice\";\r\nimport { getAttachments, getScanned } from \"../../../Helpers/dts_helpers\";\r\nimport { useState } from \"react\";\r\n\r\nconst ViewActionStatus = ({ reforward }) => {\r\n  const { com_id, inbox_id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    reviewActionTakenData,\r\n    isLoading,\r\n    errorMessage,\r\n    actor,\r\n    rejectedBy,\r\n    last_touch,\r\n    addLoading,\r\n  } = useSelector((state) => state.action);\r\n  const navigate = useNavigate();\r\n  const [confirmationOpen, setConfirmation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getActionTaken({ com_id, inbox_id }));\r\n  }, [dispatch]);\r\n\r\n  const onClickSubmit = async () => {\r\n    const res = await dispatch(reforwardForAction(reviewActionTakenData));\r\n    if (res.payload.inbox_id) {\r\n      await dispatch(taskComplete(inbox_id));\r\n      navigate(\"/dts/managementOfCommunications/inbox\");\r\n    }\r\n  };\r\n\r\n  const onConfirmSubmit = (e)  => {\r\n    e.preventDefault()\r\n    setConfirmation(!confirmationOpen);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <Confirmation isOpen={confirmationOpen} toggleModal={() => setConfirmation(!confirmationOpen)} onProceed={onClickSubmit} />\r\n      <ContentLoader isLoading={isLoading} errorMessage={errorMessage}>\r\n        <h4>View Action Status</h4>\r\n        <hr />\r\n        <Card\r\n          body\r\n          style={{\r\n            backgroundColor: \"#ffdede\",\r\n          }}\r\n        >\r\n          <CardTitle className=\"text-danger\" tag={\"h4\"}>\r\n            For Revision\r\n          </CardTitle>\r\n          <CardText>\r\n            <div>\r\n              <span className=\"lead\">Action Taken: </span>\r\n              <pre className=\"pre-wrap-text p-2 rounded bg-light shadow\">\r\n                {reviewActionTakenData.act_taken}\r\n                <br />\r\n                <i className=\"text-secondary\">{`by ${actor.emp_firstname} ${actor.emp_lastname} - ${actor.office_code}`}</i>\r\n              </pre>\r\n            </div>\r\n            <div>\r\n              <span className=\"lead\">Remarks: </span>\r\n              <pre className=\"pre-wrap-text p-2 rounded bg-light shadow\">\r\n                {reviewActionTakenData.act_remarks}\r\n                <br />\r\n                {rejectedBy && (\r\n                  <i className=\"text-secondary\">{`by ${\r\n                    rejectedBy.emp_firstname\r\n                  } ${rejectedBy.emp_lastname} - ${\r\n                    rejectedBy.office_code\r\n                  } | ${moment(\r\n                    reviewActionTakenData.act_reject_date\r\n                  ).fromNow()}`}</i>\r\n                )}\r\n              </pre>\r\n            </div>\r\n            <ImageGallery\r\n              title={\"Scanned Copies\"}\r\n              images={reviewActionTakenData.scanned && getScanned(reviewActionTakenData.scanned)}\r\n            />\r\n            <br />\r\n            <AttachmentsContainer\r\n              attachments={ reviewActionTakenData.attachments && getAttachments(reviewActionTakenData.attachments)}\r\n            />\r\n          </CardText>\r\n        </Card>\r\n        {reforward && (\r\n          <i className=\"text-info\">\r\n            Note: clicking submit button will forward this communication to{\" \"}\r\n            {`${last_touch.emp_firstname} ${last_touch.emp_lastname} - ${last_touch.office_code}`}{\" \"}\r\n          </i>\r\n        )}\r\n        <div className=\"d-flex justify-content-between mt-3\">\r\n          <BackButton />\r\n          {reforward ? (\r\n            <IconatedButton\r\n              size=\"md\"\r\n              color=\"primary\"\r\n              name={addLoading ? <Spinner color=\"light\" /> : \"Submit\"}\r\n              onClick={onConfirmSubmit}\r\n              icon={<BsChevronRight />}\r\n            />\r\n          ) : (\r\n            <NextTaskButton />\r\n          )}\r\n        </div>\r\n      </ContentLoader>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ViewActionStatus;\r\n"],"names":["reforward","useParams","com_id","inbox_id","dispatch","useDispatch","useSelector","state","action","reviewActionTakenData","isLoading","errorMessage","actor","rejectedBy","last_touch","addLoading","navigate","useNavigate","useState","confirmationOpen","setConfirmation","useEffect","getActionTaken","onClickSubmit","reforwardForAction","payload","taskComplete","className","isOpen","toggleModal","onProceed","body","style","backgroundColor","tag","act_taken","emp_firstname","emp_lastname","office_code","act_remarks","moment","act_reject_date","fromNow","title","images","scanned","getScanned","attachments","getAttachments","size","color","name","onClick","e","preventDefault","icon"],"sourceRoot":""}