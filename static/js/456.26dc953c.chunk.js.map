{"version":3,"file":"static/js/456.26dc953c.chunk.js","mappings":"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","sources":["Pages/DTS/AddCommunication/AddCommunication.jsx"],"sourcesContent":["// Add Communication Page\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  Form,\r\n  InputGroup,\r\n  InputGroupText,\r\n  FormFeedback,\r\n  Spinner,\r\n  FormText,\r\n} from \"reactstrap\";\r\nimport GobackButton from \"../../../Layouts/Portal/GoBackButton/GobackButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getClassifications } from \"../../../features/dts/classifications/classifications\";\r\nimport { addDraft, getDrafts } from \"../../../features/dts/drafts/draftsSlice\";\r\nimport { ViewCommunicationModal } from \"../../../Layouts/DTS\";\r\nimport moment from \"moment\";\r\nimport {\r\n  addCommunication,\r\n  getCommunication,\r\n  resetViewCommunicationData,\r\n  verifyControlNo,\r\n} from \"../../../features/dts/communications/communications\";\r\nimport { Link } from \"react-router-dom\";\r\nconst _ = require(\"lodash\");\r\n\r\nconst AddCommunication = ({ socket }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { classifications } = useSelector((state) => state.classifications);\r\n  const { user_id, office_code } = useSelector((state) => state.user.user);\r\n  const { newAddedCommunication, isControlNoExist, addLoading } = useSelector(\r\n    (state) => state.communication\r\n  );\r\n  const [isViewCommunicationModalOpen, toggleViewCommunicationModal] =\r\n    useState(false);\r\n  const [classCode, setClassCode] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(null);\r\n  const [uploadInvalid, setUploadInvalid] = useState({\r\n    scanned: false,\r\n    attachments: false,\r\n  });\r\n\r\n  const onchangeClass = () => {\r\n    const classification = document.getElementById(\"class_id\");\r\n    var selected = classification.options[classification.selectedIndex];\r\n    const class_id = selected.getAttribute(\"value\");\r\n    const days = classifications.filter(\r\n      (data) => data.class_id === parseInt(class_id)\r\n    );\r\n    if (days[0] && days[0].class_due > 0) {\r\n      setDueDate(moment().add(days[0].class_due, \"d\").format(\"YYYY-MM-DD\"));\r\n    } else {\r\n      setDueDate(null);\r\n    }\r\n    setClassCode(selected.getAttribute(\"data-classcode\"));\r\n  };\r\n\r\n  const onChangeControlNo = () => {\r\n    const control_no =\r\n      getControlNumber() + document.getElementById(\"control_no\").value;\r\n    dispatch(verifyControlNo(control_no));\r\n  };\r\n\r\n  const onChangeDueDate = (e) => {\r\n    setDueDate(e.target.value);\r\n  };\r\n\r\n  const onUpload = (e) => {\r\n    const maxfilesize = 25000000;\r\n    const uploadFile = e.target;\r\n    const inputName = uploadFile.getAttribute('name');\r\n    if(!_.isEmpty(uploadFile.files)){\r\n      if (uploadFile.files[0].size > maxfilesize) {\r\n        setUploadInvalid({...uploadInvalid, [inputName]: true})\r\n      } else {\r\n        setUploadInvalid({...uploadInvalid, [inputName]: false})\r\n      }\r\n    }else{\r\n      setUploadInvalid({...uploadInvalid, [inputName]: false})\r\n    }\r\n  };\r\n\r\n  const getControlNumber = () => {\r\n    let control = `DARFO2.${office_code}`;\r\n    if (classCode !== \"\" && classCode != null) {\r\n      control += \".\" + classCode;\r\n    } else {\r\n      // if(classifications.length !== 0)\r\n      control += \".00-0\";\r\n    }\r\n    control += \"-\" + moment().format(\"YY-MM\") + \"-\";\r\n    return control;\r\n  };\r\n\r\n  const classificationList = classifications.map((item, index) => {\r\n    return (\r\n      <option\r\n        value={item.class_id}\r\n        data-classcode={`${item.class_code}`}\r\n        key={index}\r\n      >\r\n        {item.class_name} - {item.cat_name}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const onSaveDraft = async () => {\r\n    const formData = new FormData(\r\n      document.querySelector(\"#add_communication_form\")\r\n    );\r\n    const control_no = formData.get(\"control_no\");\r\n    formData.append(\"user_id\", user_id);\r\n    formData.append(\"draft\", \"true\");\r\n    // formData.set(\"control_no\", getControlNumber() + control_no);\r\n    formData.set(\"control_no\", getControlNumber());\r\n    await dispatch(addDraft(formData)).then(() => {\r\n      document.querySelector(\"#add_communication_form\").reset();\r\n      dispatch(getDrafts(user_id));\r\n    });\r\n  };\r\n\r\n  const onAddCommunication = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const control_no = formData.get(\"control_no\");\r\n    formData.append(\"user_id\", user_id);\r\n    // formData.set(\"control_no\", getControlNumber() + control_no);\r\n    formData.set(\"control_no\", getControlNumber());\r\n    const res = await dispatch(addCommunication(formData));\r\n    if (res.payload.communication && res.payload !== \"com_duplicate\") {\r\n      alert(\"Added Succesfully!\");\r\n      const res_new_com = await dispatch(\r\n        getCommunication(res.payload.communication)\r\n      );\r\n      if (!_.isEmpty(res_new_com.payload)) {\r\n        toggleViewCommunicationModal(!isViewCommunicationModalOpen);\r\n      }\r\n      e.target.reset();\r\n    } else {\r\n      alert(\"Subject of the communication is duplicated\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getClassifications());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    onChangeControlNo();\r\n  }, [classCode]);\r\n\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <Form id=\"add_communication_form\" onSubmit={onAddCommunication}>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <h3>Add Communication</h3>\r\n          <GobackButton />\r\n        </div>\r\n\r\n        <ViewCommunicationModal\r\n          isModalOpen={isViewCommunicationModalOpen}\r\n          toggleModal={() => {\r\n            toggleViewCommunicationModal(!isViewCommunicationModalOpen);\r\n            dispatch(resetViewCommunicationData());\r\n          }}\r\n          com_id={newAddedCommunication}\r\n        />\r\n\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"control_no\">\r\n                Control No. <span className=\"text-danger\">*</span>\r\n              </Label>\r\n              <InputGroup size=\"sm\">\r\n                <InputGroupText>{getControlNumber()}</InputGroupText>\r\n                <Input\r\n                  id=\"control_no\"\r\n                  name=\"control_no\"\r\n                  type=\"text\"\r\n                  invalid={isControlNoExist}\r\n                  onChange={onChangeControlNo}\r\n                  disabled\r\n                  defaultValue=\"[AUTO]\"\r\n                />\r\n                <FormFeedback>Control number already exist!</FormFeedback>\r\n              </InputGroup>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <div className=\"d-flex\">\r\n                <Label for=\"class_id\">\r\n                  Classification <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Link\r\n                  to=\"/dts/managementOfCommunications/classifications\"\r\n                  className=\"ms-auto\"\r\n                >\r\n                  Management of Classifications\r\n                </Link>\r\n              </div>\r\n              <Input\r\n                bsSize=\"sm\"\r\n                id=\"class_id\"\r\n                name=\"class_id\"\r\n                type=\"select\"\r\n                onChange={onchangeClass}\r\n                required\r\n              >\r\n                <option data-classcode=\"00-0\" value=\"\">\r\n                  Select classification\r\n                </option>\r\n                {classificationList}\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"due_date\">Due Date</Label>\r\n              <Input\r\n                bsSize=\"sm\"\r\n                id=\"due_date\"\r\n                name=\"due_date\"\r\n                type=\"date\"\r\n                onChange={onChangeDueDate}\r\n                value={_.isNull(dueDate) ? \"\" : dueDate}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"12\" className=\"border rounded rounded-4 p-2 mx-2\">\r\n            <h6>Source</h6>\r\n            <Row>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label for=\"source_name\">\r\n                    Name <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"source_name\"\r\n                    name=\"source_name\"\r\n                    type=\"text\"\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label for=\"source_position\">Position</Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"source_position\"\r\n                    name=\"source_position\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label for=\"source_office\">Office</Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"source_office\"\r\n                    name=\"source_office\"\r\n                    type=\"text\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col md=\"12\">\r\n            <FormGroup>\r\n              <Label for=\"subject\">\r\n                Subject <span className=\"text-danger\">*</span>\r\n              </Label>\r\n              <Input bsSize=\"sm\" id=\"subject\" name=\"subject\" type=\"textarea\" />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"date_received\">\r\n                Date Received <span className=\"text-danger\">*</span>\r\n              </Label>\r\n              <Input\r\n                bsSize=\"sm\"\r\n                id=\"date_received\"\r\n                name=\"date_received\"\r\n                type=\"date\"\r\n                required\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"urgency\">\r\n                Urgency <span className=\"text-danger\">*</span>\r\n              </Label>\r\n              <Input\r\n                bsSize=\"sm\"\r\n                id=\"urgency\"\r\n                name=\"urgency\"\r\n                type=\"select\"\r\n                required\r\n              >\r\n                <option value={\"Regular\"}>Regular</option>\r\n                <option value={\"Rush\"}>Rush</option>\r\n                <option value={\"OMG\"}>OMG</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"scanned\">\r\n                Scanned Copies\r\n                <span className=\"text-danger\">*</span>\r\n              </Label>\r\n              <Input\r\n                onChange={onUpload}\r\n                bsSize=\"sm\"\r\n                id=\"scanned\"\r\n                name=\"scanned\"\r\n                type=\"file\"\r\n                required\r\n                multiple\r\n                accept=\"image/*\"\r\n                invalid={uploadInvalid.scanned}\r\n              />\r\n              <FormFeedback>\r\n                File too large. Maximum is 25mb.\r\n              </FormFeedback>\r\n              <FormText>\r\n                MULTIPLE FILES ALLOWED 25mb MAX (PNG, JPG, JPEG ONLY)\r\n              </FormText>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label for=\"attachments\">Attachments</Label>\r\n              <Input\r\n                onChange={onUpload}\r\n                bsSize=\"sm\"\r\n                id=\"attachments\"\r\n                name=\"attachments\"\r\n                type=\"file\"\r\n                multiple\r\n                invalid={uploadInvalid.attachments}\r\n                accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\"\r\n              />\r\n              <FormFeedback>\r\n                File too large. Maximum is 25mb.\r\n              </FormFeedback>\r\n              <FormText>\r\n                MULTIPLE FILES ALLOWED 25mb MAX (PDF, DOCX, PPTX, XLSX, JPG, JPEG, PNG  ONLY)\r\n              </FormText>\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <Col md=\"12\">\r\n            <FormGroup>\r\n              <Label for=\"other_remarks\">Other Remarks</Label>\r\n              <Input\r\n                bsSize=\"sm\"\r\n                id=\"other_remarks\"\r\n                name=\"other_remarks\"\r\n                type=\"textarea\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <div className=\"d-flex justify-content-center mt-2\">\r\n            <Button\r\n              color=\"secondary\"\r\n              className=\"me-2\"\r\n              onClick={onSaveDraft}\r\n              disabled={isControlNoExist}\r\n            >\r\n              Save as draft\r\n            </Button>\r\n            <Button type=\"reset\" className=\"me-2\">\r\n              Reset\r\n            </Button>\r\n            <Button color=\"success\" type=\"submit\" disabled={isControlNoExist}>\r\n              {addLoading ? <Spinner color=\"light\" /> : \"Add\"}\r\n            </Button>\r\n          </div>\r\n        </Row>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddCommunication;\r\n"],"names":["_","require","socket","dispatch","useDispatch","classifications","useSelector","state","user","user_id","office_code","communication","newAddedCommunication","isControlNoExist","addLoading","useState","isViewCommunicationModalOpen","toggleViewCommunicationModal","classCode","setClassCode","dueDate","setDueDate","scanned","attachments","uploadInvalid","setUploadInvalid","onChangeControlNo","control_no","getControlNumber","document","getElementById","value","verifyControlNo","onUpload","e","uploadFile","target","inputName","getAttribute","isEmpty","files","size","control","moment","format","classificationList","map","item","index","class_id","class_code","class_name","cat_name","onSaveDraft","formData","FormData","querySelector","get","append","set","addDraft","then","reset","getDrafts","onAddCommunication","preventDefault","addCommunication","res","payload","alert","getCommunication","res_new_com","useEffect","getClassifications","className","id","onSubmit","isModalOpen","toggleModal","resetViewCommunicationData","com_id","md","for","name","type","invalid","onChange","disabled","defaultValue","to","bsSize","classification","selected","options","selectedIndex","days","filter","data","parseInt","class_due","add","required","isNull","multiple","accept","color","onClick"],"sourceRoot":""}