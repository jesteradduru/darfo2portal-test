{"version":3,"file":"static/js/299.11afae7d.chunk.js","mappings":"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","sources":["Pages/DTS/RoutingSlip/RoutingSlip.jsx"],"sourcesContent":["// Routing slip layout\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { Col, Row, FormGroup, Label, Input, Form } from \"reactstrap\";\r\nimport {\r\n  setGroupRecipient,\r\n} from \"../../../features/dts/routing/routingSlice\";\r\nimport { RoutingCheckbox } from \"../../../Layouts/DTS\";\r\nimport { getUser } from \"../../../features/Portal/userSlice\";\r\nimport { getAccounts } from \"../../../features/Portal/accountsSlice\";\r\nimport {useReactToPrint} from \"react-to-print\";\r\nimport { useRef } from \"react\";\r\nimport { IconatedButton } from \"../../../Layouts/Portal\";\r\nimport { BsPrinter } from \"react-icons/bs\";\r\nconst _ = require('lodash')\r\n\r\nconst RoutingSlip = ({ data, viewOnly }) => {\r\n  const { users } = useSelector((state) => state.accounts);\r\n  const { user } = useSelector((state) => state.user);\r\n  const { viewCommunicationData } = useSelector((state) => state.tasks);\r\n  const dispatch = useDispatch();\r\n  const { routingRecipients } = useSelector((state) => state.routing);\r\n  const { tasks, taskCounter } = useSelector((state) => state.tasks);\r\n  const printHtml = useRef();\r\n  const handlePrintRouting = useReactToPrint({\r\n    content: () => printHtml.current,\r\n    documentTitle:'routing_slip',\r\n    pageStyle:'print'\r\n  })\r\n\r\n  const groupList = users\r\n    .filter((user) => user.group_id === data.value)\r\n    .map((user) => {\r\n      return {\r\n        value: user.user_username,\r\n        label: `${user.emp_firstname}  ${user.emp_lastname} - ${user.office_code}`,\r\n        user_id: user.user_id,\r\n        user_username: user.user_username,\r\n        user_fullname: `${user.emp_firstname}  ${user.emp_lastname} - ${user.office_code}`,\r\n        role_name: user.role_name,\r\n        role_id: user.role_id,\r\n      };\r\n    });\r\n\r\n  const onChangeGroupRecipient = (selectedUsers) => {\r\n    // setGroupRecipients(selectedUsers);\r\n    dispatch(\r\n      setGroupRecipient({ group_id: data.value, recipients: selectedUsers })\r\n    );\r\n    // console.log(selectedUsers);\r\n  };\r\n\r\n  const routingFrom = () => {\r\n    if(!_.isEmpty(users)){\r\n      if(user.role_name.includes('Process-level') && !viewOnly){\r\n        const pl_approver = users.filter(item => item.role_name === 'Process-level Approver')[0]\r\n        return `${pl_approver.emp_firstname} ${pl_approver.emp_middlename[0]}. ${pl_approver.emp_lastname} - ${pl_approver.emp_position}`; \r\n      }else if(viewOnly){\r\n        const from = users.filter(item => item.user_id === data.routing_from)[0]\r\n        return `${from.emp_firstname} ${from.emp_middlename[0]}. ${from.emp_lastname} - ${from.emp_position}`;\r\n      }else{\r\n        return `${user.emp_firstname} ${user.emp_middlename[0]}. ${user.emp_lastname} - ${user.emp_position}`;\r\n      }\r\n    }\r\n  };\r\n\r\n  const routingData = routingRecipients.filter((r) => r.value === data.value);\r\n\r\n  // const usersList = users\r\n  //   .filter(\r\n  //     (user) =>\r\n  //       !routingRecipients.map((r) => r.value).includes(user.user_username)\r\n  //   )\r\n  //   .map((user) => {\r\n  //     return {\r\n  //       value: user.user_username,\r\n  //       label: `${user.emp_firstname}  ${user.emp_lastname} - ${user.office_code}`,\r\n  //       type: \"user\",\r\n  //     };\r\n  //   });\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setGroupRecipient({ group_id: data.value, recipients: groupList })\r\n    );\r\n    dispatch(getAccounts())\r\n    dispatch(getUser())\r\n\r\n  }, [dispatch]);\r\n\r\n\r\n  const isLegendContains = (legend) => {\r\n    if(data.routing_legend){\r\n      return data.routing_legend.includes(legend)\r\n    }\r\n  }\r\n\r\n  const showToTask = (task) => {\r\n    const allowedTask = ['viewRouting', 'addRoutingNote', 'forRouting', 'routeCommunication']\r\n    return allowedTask.includes(task);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <IconatedButton\r\n        name='Print Routing'\r\n        outline\r\n        icon={<BsPrinter />}\r\n        className=\"ms-auto d-block my-2 d-print-none\"\r\n        onClick={handlePrintRouting}\r\n      />\r\n    <Form\r\n      id={`routing_${data.value}`}\r\n      ref={printHtml}\r\n      className=\"p-md-4 p-1 rounded bg-super-light-green m-md-2 routing_slip_form\"\r\n      style={{pointerEvents: viewOnly ? 'none' : ''}}\r\n    >\r\n      <FormGroup>\r\n        <Label for={`reference_no`}>Reference No.</Label>\r\n        <Input\r\n          type=\"text\"\r\n          id={`reference_no`}\r\n          name=\"reference_no\"\r\n          size=\"sm\"\r\n          defaultValue={data.routing_referenceNo ? data.routing_referenceNo : `139-9-${viewCommunicationData.class_code}-` }\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for={`routing_from`}>From</Label>\r\n        <Input\r\n          type=\"text\"\r\n          id={`routing_from`}\r\n          defaultValue={routingFrom()}\r\n          name=\"routing_from\"\r\n          size=\"sm\"\r\n        />\r\n      </FormGroup>\r\n      {data.type === \"group\" ? (\r\n        <FormGroup>\r\n          <Label for=\"routing_to\">To</Label>\r\n          <Select\r\n            options={groupList}\r\n            isMulti\r\n            defaultValue={groupList}\r\n            className=\"basic-multi-select\"\r\n            classNamePrefix=\"select\"\r\n            onChange={onChangeGroupRecipient}\r\n          />\r\n        </FormGroup>\r\n      ) : (\r\n        <FormGroup>\r\n          <Label for=\"routing_to\">To</Label>\r\n          <Select\r\n            options={routingData}\r\n            defaultValue={!data.routing_to ? routingData : [{label: data.label}]}\r\n            classNamePrefix=\"select\"\r\n          />\r\n        </FormGroup>\r\n      )}\r\n\r\n      <Row style={{wordWrap: 'break-word'}}>\r\n        <Col md='6'>\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`for_action_${data.value}`}\r\n            value={`for_action`}\r\n            desc=\"For your appropriate action\"\r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`for_information_${data.value}`}\r\n            value={`for_information`}\r\n            desc=\"For your information/file & reference\"\r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`for_review_${data.value}`}\r\n            value={`for_review`}\r\n            desc=\"For your review/ comments/ recommendation/ validation\"\r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`draft_reply_${data.value}`}\r\n            value={`draft_reply`}\r\n            desc=\"Draft reply/For your acknowledgement\"\r\n            defaultValue={data.routing_draftReply}\r\n            textbox\r\n            isLegendContains={isLegendContains}\r\n          />\r\n        </Col>\r\n        <Col md='6'>\r\n          <RoutingCheckbox \r\n            name=\"routing_legend\" \r\n            id={`rush_${data.value}`} \r\n            value={`rush`} \r\n            desc=\"Rush\" \r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox \r\n            name=\"routing_legend\" \r\n            id={`urgent_${data.value}`} \r\n            value={`urgent`} \r\n            desc=\"Urgent\" \r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`for_circulation_${data.value}`}\r\n            value={`for_circulation`}\r\n            desc=\"For circulation & dissemination\"\r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`for_schedule_${data.value}`}\r\n            value='for_schedule'\r\n            desc=\"For schedule\"\r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`attend_${data.value}`}\r\n            value={`attend`}\r\n            desc=\"Attend/Represent Me\"\r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`consolidate_${data.value}`}\r\n            value={`consolidate`}\r\n            textbox\r\n            defaultValue={isLegendContains('consolidate') ? data.routing_consolidate : \"\\nPlease consolidate & submit to my office on or before\\n\"}\r\n            isLegendContains={isLegendContains}\r\n          />\r\n        </Col>\r\n        {(viewCommunicationData.com_urgency === \"Rush\" || showToTask(tasks[taskCounter])  ) && (\r\n          <Col md=\"12\">\r\n            <FormGroup>\r\n              <Label for={`routing_remarks`}>Remarks</Label>\r\n              <Input\r\n                defaultValue={data.routing_remarks}\r\n                type=\"textarea\"\r\n                id={`routing_remarks_${data.value}`}\r\n                name=\"routing_remarks\"\r\n                size=\"sm\"\r\n                rows=\"5\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoutingSlip;\r\n"],"names":["_","require","data","viewOnly","users","useSelector","state","accounts","user","viewCommunicationData","tasks","dispatch","useDispatch","routingRecipients","routing","taskCounter","printHtml","useRef","handlePrintRouting","useReactToPrint","content","current","documentTitle","pageStyle","groupList","filter","group_id","value","map","user_username","label","emp_firstname","emp_lastname","office_code","user_id","user_fullname","role_name","role_id","routingData","r","useEffect","setGroupRecipient","recipients","getAccounts","getUser","task","isLegendContains","legend","routing_legend","includes","name","outline","icon","className","onClick","id","ref","style","pointerEvents","for","type","size","defaultValue","routing_referenceNo","class_code","isEmpty","pl_approver","item","emp_middlename","emp_position","from","routing_from","routingFrom","options","isMulti","classNamePrefix","onChange","selectedUsers","routing_to","wordWrap","md","desc","routing_draftReply","textbox","routing_consolidate","com_urgency","routing_remarks","rows"],"sourceRoot":""}