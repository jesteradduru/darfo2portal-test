{"version":3,"file":"static/js/666.0f4ba911.chunk.js","mappings":"wPAoHA,UAhGc,WACZ,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA2BC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAV,IAArCA,EAAP,EAAOA,MAAOC,EAAd,EAAcA,UACd,GAAiDC,EAAAA,EAAAA,WAAS,GAA1D,eAAOC,EAAP,KAA2BC,EAA3B,KACA,GAAmDF,EAAAA,EAAAA,WAAS,GAA5D,eAAOG,EAAP,KAA4BC,EAA5B,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOK,EAAP,KAAqBC,EAArB,KAEMC,EAAY,mCAAG,WAAOC,EAASC,GAAhB,qEAChBC,OAAOC,QAAP,uCAA+CF,IAD/B,gCAECf,GAASkB,EAAAA,EAAAA,IAAWJ,IAFrB,OAIE,uBAJF,OAIVK,QACLC,MAAM,wDAENpB,GAASqB,EAAAA,EAAAA,OAPM,2CAAH,wDAeZC,EAAU,CACd,CAAEC,KAAM,YAAaC,SAAU,SAACC,GAAD,OAASA,EAAIV,SAAb,EAAwBW,UAAU,GACjE,CAAEH,KAAM,QAASC,SAAU,SAACC,GAAD,OAASA,EAAIE,KAAb,EAAoBD,UAAU,GACzD,CAAEH,KAAM,UAAWC,SAAU,SAACC,GAAD,OAASA,EAAIG,OAAb,EAAsBF,UAAU,GAC7D,CACEH,KAAM,SACNM,KAAM,SAACJ,GACL,OACE,iBAAKK,UAAU,6BAAf,WACE,SAAC,IAAD,CAAgBA,UAAU,OAAOC,MAAM,SAAC,MAAD,IAAsBC,QAAS,WAZ9EpB,EAaqBa,GACXzB,GAASiC,EAAAA,EAAAA,IAAmBR,EAAIX,UAChCJ,GAAqBD,EACtB,KACD,SAAC,IAAD,CACEsB,MAAM,SAAC,MAAD,IACNG,MAAM,SACNF,QAAS,kBAAMnB,EAAaY,EAAIX,QAASW,EAAIV,UAApC,MAIhB,IAICoB,EAAO/B,EAAMgC,KAAI,SAAAC,GACrB,MACE,CACEvB,QAASuB,EAAKvB,QACdC,UAAWsB,EAAKtB,UAChBY,MAAOU,EAAKC,WACZV,QAASS,EAAKE,cAInB,IAMD,OAJAC,EAAAA,EAAAA,YAAU,WACRxC,GAASqB,EAAAA,EAAAA,MACV,GAAE,CAACrB,KAGF,UAAC,KAAD,CAAW8B,UAAU,OAArB,WACE,SAAC,KAAD,CAAcW,YAAalC,EAAoBmC,YAAalC,EAAoBJ,MAAOA,KACvF,SAAC,KAAD,CAAeqC,YAAahC,EAAqBiC,YAAahC,EAAqBiC,SAAUhC,KAC7F,UAAC,KAAD,YACE,SAAC,KAAD,CAAKiC,GAAG,KAAR,UACE,SAAC,KAAD,CAAerB,KAAK,QAAQsB,WAAW,WAAWH,YAAa,kBAAMlC,GAAoBD,EAA1B,OAEjE,SAAC,KAAD,CAAKqC,GAAG,KAAR,UACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAKA,GAAG,IAAR,UACE,SAAC,KAAD,CAAeE,YAAa,iBAAkBhB,UAAU,gBAI9D,UAAC,KAAD,YACE,gBAAKA,UAAU,UACf,SAAC,KAAD,CACEK,KAAMA,EACNb,QAASA,EACTyB,kBAAgB,EAChBC,YAAU,EACVC,gBAAiB5C,EACjB6C,mBACE,SAAC,KAAD,cAOb,C","sources":["Pages/Portal/Roles/Roles.jsx"],"sourcesContent":["/*\r\n  /*\r\n  This is the roles & permissions page, a sub page of Admin Panel Page.\r\n*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport {\r\n  ContentSearch,\r\n  ContentHeader,\r\n  IconatedButton,\r\n  AddRoleModal,\r\n  EditRoleModal\r\n} from \"../../../Layouts/Portal\";\r\nimport { BsFillPencilFill, BsTrashFill } from \"react-icons/bs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteRole, getRolePermissions, getRoles } from \"../../../features/Portal/rolesSlice\";\r\n\r\n\r\n\r\nconst Roles = () => {\r\n  const dispatch = useDispatch()\r\n  const {roles, isLoading} = useSelector(state => state.roles)\r\n  const [isAddRoleModalOpen, toggleAddRoleModal] = useState(false);\r\n  const [isEditRoleModalOpen, toggleEditRoleModal] = useState(false);\r\n  const [editRoleData, setEditRoleData] = useState({})\r\n  \r\n  const onDeleteRole = async (role_id, role_name)=> {\r\n    if(window.confirm(`Do you really want to delete ${role_name}`)){\r\n      const res = await dispatch(deleteRole(role_id))\r\n      \r\n      if(res.payload === 'role_delete_unable'){\r\n        alert('Unable to delete. This role is associated to a user.')\r\n      }else{\r\n        dispatch(getRoles())\r\n      }\r\n    }\r\n  }  \r\n  const onEditRole = (role_data) => {\r\n    setEditRoleData(role_data)\r\n  }\r\n\r\n  const columns = [\r\n    { name: \"Role Name\", selector: (row) => row.role_name, sortable: true },\r\n    { name: \"Users\", selector: (row) => row.users, sortable: true },\r\n    { name: \"Granted\", selector: (row) => row.granted, sortable: true },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => {\r\n        return (\r\n          <div className=\"d-flex align-items-center \">\r\n            <IconatedButton className='me-1' icon={<BsFillPencilFill />} onClick={() => {\r\n              onEditRole(row)\r\n              dispatch(getRolePermissions(row.role_id))\r\n              toggleEditRoleModal(!isEditRoleModalOpen)\r\n            }} />\r\n            <IconatedButton\r\n              icon={<BsTrashFill />}\r\n              color=\"danger\"\r\n              onClick={() => onDeleteRole(row.role_id, row.role_name)}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const data = roles.map(role => {\r\n    return (\r\n      {\r\n        role_id: role.role_id,\r\n        role_name: role.role_name,\r\n        users: role.user_count,\r\n        granted: role.granted_count,\r\n      }\r\n    )\r\n    \r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getRoles());\r\n  }, [dispatch])\r\n  \r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <AddRoleModal isModalOpen={isAddRoleModalOpen} toggleModal={toggleAddRoleModal} roles={roles} />\r\n      <EditRoleModal isModalOpen={isEditRoleModalOpen} toggleModal={toggleEditRoleModal} roleData={editRoleData} />\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <ContentHeader name=\"Roles\" buttonName=\"Add Role\" toggleModal={() => toggleAddRoleModal(!isAddRoleModalOpen)} />\r\n        </Col>\r\n        <Col md=\"12\">\r\n          <Row>\r\n            <Col md=\"6\">\r\n              <ContentSearch placeholder={\"Search role...\"} className=\"mb-3\" />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"mt-2\"></div>\r\n          <DataTable\r\n            data={data}\r\n            columns={columns}\r\n            highlightOnHover\r\n            pagination\r\n            progressPending={isLoading}\r\n            progressComponent={\r\n              <Spinner />\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Roles;\r\n"],"names":["dispatch","useDispatch","useSelector","state","roles","isLoading","useState","isAddRoleModalOpen","toggleAddRoleModal","isEditRoleModalOpen","toggleEditRoleModal","editRoleData","setEditRoleData","onDeleteRole","role_id","role_name","window","confirm","deleteRole","payload","alert","getRoles","columns","name","selector","row","sortable","users","granted","cell","className","icon","onClick","getRolePermissions","color","data","map","role","user_count","granted_count","useEffect","isModalOpen","toggleModal","roleData","md","buttonName","placeholder","highlightOnHover","pagination","progressPending","progressComponent"],"sourceRoot":""}