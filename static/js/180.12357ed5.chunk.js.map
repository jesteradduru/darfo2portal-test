{"version":3,"file":"static/js/180.12357ed5.chunk.js","mappings":"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","sources":["Pages/Portal/Accounts/Accounts.jsx"],"sourcesContent":["/*\r\n  This is the account page, a sub page of Admin Panel Page.\r\n*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Container, Badge, Spinner } from \"reactstrap\";\r\nimport {\r\n  ContentHeader,\r\n  ContentSearch,\r\n  ActionDropdown,\r\n  AddAccountModal,\r\n  EditAccountModal\r\n} from \"../../../Layouts/Portal\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAccounts, getGroups } from \"../../../features/Portal/accountsSlice\";\r\nimport { getOffices } from \"../../../features/Portal/officesSlice\";\r\nimport { getRoles } from \"../../../features/Portal/rolesSlice\";\r\n\r\nconst Accounts = () => {\r\n  const [isAddAccountModalOpen, toggleAddAccountModal] = useState(false);\r\n  const [isEditAccountModalOpen, toggleEditAccountModal] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [editUserData, setEditUserData] = useState({});\r\n  const { users, isLoading, groups } = useSelector((state) => state.accounts);\r\n  const { offices } = useSelector((state) => state.offices);\r\n  const { roles } = useSelector((state) => state.roles);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAccounts());\r\n    dispatch(getOffices());\r\n    dispatch(getRoles());\r\n    dispatch(getGroups());\r\n  }, [dispatch]);\r\n\r\n  const onSearchValueChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const columns = [\r\n    { name: \"Username\", selector: (row) => row.username, sortable: true },\r\n    { name: \"Full Name\", selector: (row) => row.fullname, sortable: true },\r\n    { name: \"Position\", selector: (row) => row.position, sortable: true },\r\n    { name: \"Role\", selector: (row) => row.role, sortable: true },\r\n    {\r\n      name: \"Office\",\r\n      selector: (row) => row.office,\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      cell: (row) => {\r\n        if (row.status === \"activated\")\r\n          return <Badge color=\"success\">Activated</Badge>;\r\n        else {\r\n          return <Badge color=\"danger\">Deactivated</Badge>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => {\r\n        return (\r\n          <ActionDropdown\r\n            userId={row.user_id}\r\n            toggleEditAccountModal={() => {\r\n              toggleEditAccountModal(!isEditAccountModalOpen);\r\n              setEditUserData(row);\r\n            }}\r\n          />\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const data = users.map((user) => {\r\n    return {\r\n      user_id: user.user_id,\r\n      username: user.user_username,\r\n      role_id: user.role_id,\r\n      user_supervisor_id: user.user_supervisor_id,\r\n      agency_no: user.emp_agencyIdNo,\r\n      firstname: user.emp_firstname,\r\n      middlename: user.emp_middlename,\r\n      lastname: user.emp_lastname,\r\n      extension: user.emp_extension,\r\n      birthdate: user.emp_dateOfBirth,\r\n      sex: user.emp_sex,\r\n      contact: user.emp_contact,\r\n      office_id: user.office_id,\r\n      email: user.emp_email,\r\n      fullname: `${user.emp_firstname} ${user.emp_middlename[0]}. ${user.emp_lastname} ${user.emp_extension} `,\r\n      position: user.emp_position,\r\n      role: user.role_name,\r\n      office: user.office_name,\r\n      status: user.user_accountStatus,\r\n      group_id: user.group_id\r\n    };\r\n  });\r\n\r\n  const filteredData = data.filter((user) => {\r\n    return user.username.toLowerCase().includes(searchValue.toLocaleLowerCase());\r\n  });\r\n\r\n  const clearSearch = () => {\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  const officeLists = offices.map((office) => {\r\n    return {\r\n      name: office.office_code + ' - '  + office.office_name,\r\n      value: office.office_id, \r\n    };\r\n  });\r\n\r\n  const roleLists = roles.map((role) => {\r\n    return {\r\n      name: role.role_name,\r\n      value: role.role_id,\r\n    };\r\n  });\r\n\r\n  const userList = users.map((user) => {\r\n    return {\r\n      name: `${user.emp_firstname} ${user.emp_middlename[0]}. ${user.emp_lastname} ${user.emp_extension} - ${user.emp_position} `,\r\n      value: user.user_id,\r\n    };\r\n  });\r\n\r\n  const groupsList = groups.map((group) => {\r\n    return {\r\n      name: `${group.group_name}`,\r\n      value: group.group_id,\r\n    };\r\n  });\r\n\r\n\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <AddAccountModal\r\n        isModalOpen={isAddAccountModalOpen}\r\n        toggleModal={toggleAddAccountModal}\r\n        officeList={officeLists}\r\n        roleList={roleLists}\r\n        users={userList}\r\n        groups={groupsList}\r\n      />\r\n      <EditAccountModal\r\n        isModalOpen={isEditAccountModalOpen}\r\n        toggleModal={toggleEditAccountModal}\r\n        officeList={officeLists}\r\n        roleList={roleLists}\r\n        users={userList}\r\n        userData={editUserData}\r\n        groups={groupsList}\r\n      />\r\n\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <ContentHeader\r\n            name=\"Accounts\"\r\n            buttonName=\"Add Account\"\r\n            toggleModal={() => toggleAddAccountModal(!isAddAccountModalOpen)}\r\n          />\r\n        </Col>\r\n\r\n        <Col md=\"12\">\r\n          <Row>\r\n            <Col sm=\"12\" md=\"6\">\r\n              <ContentSearch\r\n                placeholder={\"Search user...\"}\r\n                onSearchValueChange={onSearchValueChange}\r\n                searchValue={searchValue}\r\n                clearSearch={clearSearch}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              {/* <Row>\r\n                <Col>\r\n                  <ContentFilterDropdown name=\"Office\" lists={officeLists} />\r\n                </Col>\r\n                <Col>\r\n                  <ContentFilterDropdown name=\"Role\" lists={roleLists} />\r\n                </Col>\r\n              </Row> */}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n\r\n        <Col>\r\n          <DataTable\r\n            data={filteredData}\r\n            columns={columns}\r\n            highlightOnHover\r\n            pagination\r\n            progressPending={isLoading}\r\n            progressComponent={\r\n              <Spinner />\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Accounts;\r\n"],"names":["useState","isAddAccountModalOpen","toggleAddAccountModal","isEditAccountModalOpen","toggleEditAccountModal","searchValue","setSearchValue","editUserData","setEditUserData","useSelector","state","accounts","users","isLoading","groups","offices","roles","dispatch","useDispatch","useEffect","getAccounts","getOffices","getRoles","getGroups","columns","name","selector","row","username","sortable","fullname","position","role","office","wrap","cell","status","color","userId","user_id","filteredData","map","user","user_username","role_id","user_supervisor_id","agency_no","emp_agencyIdNo","firstname","emp_firstname","middlename","emp_middlename","lastname","emp_lastname","extension","emp_extension","birthdate","emp_dateOfBirth","sex","emp_sex","contact","emp_contact","office_id","email","emp_email","emp_position","role_name","office_name","user_accountStatus","group_id","filter","toLowerCase","includes","toLocaleLowerCase","officeLists","office_code","value","roleLists","userList","groupsList","group","group_name","className","isModalOpen","toggleModal","officeList","roleList","userData","md","buttonName","sm","placeholder","onSearchValueChange","e","target","clearSearch","data","highlightOnHover","pagination","progressPending","progressComponent"],"sourceRoot":""}