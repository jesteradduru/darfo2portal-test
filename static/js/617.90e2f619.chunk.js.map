{"version":3,"file":"static/js/617.90e2f619.chunk.js","mappings":"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","sources":["Helpers/dts_helpers.js","Layouts/DTS/BackButton/BackButton.jsx","Layouts/DTS/EditCategoryModal/EditCategoryModal.jsx","Layouts/DTS/ManageCategoryModal/ManageCategoryModal.jsx","Layouts/DTS/AddClassificationModal/AddClassificationModal.jsx","Layouts/DTS/EditClassificationModal/EditClassificationModal.jsx","Layouts/DTS/AttachmentsContainer/AttachmentsContainer.jsx","Layouts/DTS/ImageGallery/ImageGallery.jsx","Layouts/DTS/ViewCommunicationModal/ViewCommunicationModal.jsx","Layouts/DTS/EditDraftModal/EditDraftModal.jsx","Layouts/DTS/Notification/Notification.jsx","Layouts/DTS/InboxLegends/InboxLegends.jsx","Layouts/DTS/NextTaskButton/NextTaskButton.jsx","Layouts/DTS/RoutingCheckbox/RoutingCheckbox.jsx","Layouts/DTS/EditCommunicationModal/EditCommunicationModal.jsx","Layouts/DTS/RoutingTab/RoutingTab.jsx","Layouts/DTS/AddRecipientButton/AddRecipientButton.styled.js","Layouts/DTS/AddRecipientButton/AddRecipientButton.jsx","Layouts/DTS/ViewUploadsModal/ViewUploadsModal.jsx","Layouts/DTS/ViewTrailModal/TrailBody.jsx","Layouts/DTS/ViewTrailModal/TrailBullet.jsx","Layouts/DTS/ViewTrailModal/TrailContainer.jsx","Layouts/DTS/ViewTrailModal/ViewTrailModal.jsx","Layouts/DTS/AdvanceSearchBar/AdvanceSearchBar.jsx","Layouts/DTS/InputFile/InputFIleImage.jsx","Layouts/DTS/InputFile/InputFileDocuments.jsx","Layouts/DTS/PreviewRouting/PreviewRoutingLogic.js","Layouts/DTS/PreviewRouting/PreviewRouting.jsx","Layouts/Portal/GoBackButton/GobackButton.jsx"],"sourcesContent":["const apiServer = process.env.REACT_APP_API_URL;\r\n\r\nexport const getScanned = (scanned) => {\r\n    return scanned?.map(scan => {\r\n        const src = scan.scan_path.replace('uploads/dts/', apiServer + '/dts/')\r\n        const local = scan.scan_path.replace(\r\n            \"uploads\\\\dts\\\\\",\r\n            \"http://localhost:3001/dts/\"\r\n          );\r\n        if(process.env.NODE_ENV === 'development')\r\n        {\r\n            return {src: local, thumbnail: local}\r\n        }\r\n        return {src: src, thumbnail: src}\r\n    })\r\n} \r\nexport const getAttachments = (attachments) => {\r\n    return attachments?.map(attach => {\r\n        const src = attach.attach_path.replace('uploads/dts/', apiServer + '/dts/')\r\n        const local = attach.attach_path.replace(\r\n            \"uploads\\\\dts\\\\\",\r\n            \"http://localhost:3001/dts/\"\r\n          );\r\n        if(process.env.NODE_ENV === 'development'){\r\n            return {src: local, attach_name: attach.attach_name}\r\n        }\r\n        return {src: src, attach_name: attach.attach_name}\r\n    })\r\n} ","// Back button for view task\r\nimport React from 'react'\r\nimport { BsChevronLeft } from 'react-icons/bs'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navigate, useNavigate } from 'react-router-dom'\r\nimport { resetRoutingData } from '../../../features/dts/routing/routingSlice'\r\nimport { decrementTaskCounter, resetTaskCounter } from '../../../features/dts/tasks/tasksSlice'\r\nimport { IconatedButton } from '../../Portal'\r\n\r\nconst BackButton = () => {\r\n    const { tasks, taskCounter } = useSelector((state) => state.tasks);\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const onClickButton = () => {\r\n        if(taskCounter !== 0 ){\r\n            dispatch(decrementTaskCounter());\r\n        }else{\r\n            console.log(taskCounter)\r\n            dispatch(resetTaskCounter());\r\n            dispatch(resetRoutingData());\r\n            navigate('/dts/managementOfCommunications/inbox');\r\n        }\r\n    }\r\n  return (\r\n    <IconatedButton\r\n        size=\"md\"\r\n        color=\"primary\"\r\n        name=\"Back\"\r\n        icon={<BsChevronLeft />}\r\n        onClick={onClickButton}\r\n    />\r\n  )\r\n}\r\n\r\nexport default BackButton","// Modal for editing categories under Classification Page\r\nimport React from \"react\";\r\nimport { ModalContainer, IconatedButton } from \"../../Portal\";\r\nimport {\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  ModalBody,\r\n} from \"reactstrap\";\r\nimport { BsFillPlusCircleFill, BsXCircleFill } from \"react-icons/bs\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getCategories, updateCategory } from \"../../../features/dts/classifications/classifications\";\r\n\r\nconst EditCategoryModal = ({\r\n  isModalOpen,\r\n  toggleModal,\r\n  data,\r\n}) => {\r\nconst dispatch = useDispatch()\r\nconst onFormSubmit = async (e)=> {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target)\r\n    formData.append(\"cat_id\", data.cat_id)\r\n\r\n    const category = {};\r\n    formData.forEach(function (value, key) {\r\n        category[key] = value;\r\n    });\r\n\r\n    await dispatch(updateCategory(category))\r\n    .then(() => {dispatch(getCategories()); toggleModal();})\r\n}\r\n  return (\r\n    <ModalContainer\r\n      isModalOpen={isModalOpen}\r\n      toggleModal={toggleModal}\r\n      title={\"Edit Category\"}\r\n      size=\"md\"\r\n      backdrop={false}\r\n    >\r\n      <Form onSubmit={onFormSubmit}>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Label for=\"cat_name\">Category Name</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"cat_name\"\r\n              name=\"cat_name\"\r\n              required\r\n              defaultValue={data.cat_name}\r\n            />\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <IconatedButton\r\n            type=\"submit\"\r\n            size=\"sm\"\r\n            color=\"primary\"\r\n            name=\"Save\"\r\n            icon={<BsFillPlusCircleFill />}\r\n          />\r\n          <IconatedButton\r\n            size=\"sm\"\r\n            onClick={() => toggleModal()}\r\n            name=\"Cancel\"\r\n            color=\"dark\"\r\n            icon={<BsXCircleFill />}\r\n          />\r\n        </ModalFooter>\r\n      </Form>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default EditCategoryModal;\r\n","// Modal for adding Categories of classifications\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Form,\r\n  ModalFooter,\r\n  ModalBody,\r\n  InputGroup,\r\n  Button,\r\n  Spinner,\r\n} from \"reactstrap\";\r\nimport { IconatedButton, ModalContainer } from \"../../Portal\";\r\nimport { BsArrowLeftCircleFill, BsPencilFill, BsTrashFill } from \"react-icons/bs\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport EditCategoryModal from \"../EditCategoryModal/EditCategoryModal\";\r\nimport { addCategory, deleteCategory, getCategories } from \"../../../features/dts/classifications/classifications\";\r\n\r\nconst ManageCategoryModal = ({ isModalOpen, toggleModal }) => {\r\n  const [isEditCategoryModalOpen, toggleEditCategoryModal] = useState(false);\r\n  const [editCategoryData, setEditCategoryData] = useState({});\r\n  const {categories, isLoading} = useSelector(state => state.classifications) \r\n  const dispatch = useDispatch()\r\n  const columns = [\r\n    {\r\n      name: \"Category\",\r\n      selector: (row) => row.cat_name,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => {\r\n        return (\r\n          <div className=\"d-flex my-2\">\r\n            <Button\r\n              size=\"sm\"\r\n              color=\"success\"\r\n              className=\"me-1\"\r\n              onClick={() => {\r\n                toggleEditCategoryModal(!isEditCategoryModalOpen);\r\n                setEditCategoryData(row)\r\n              }}\r\n            >\r\n              <BsPencilFill />\r\n            </Button>\r\n            <Button size=\"sm\" color=\"danger\" onClick={async() => {\r\n                if(window.confirm(`Are you sure you want to delete ${row.cat_name}?`)){\r\n                  const res = await dispatch(deleteCategory(row.cat_id))\r\n\r\n                  if(res.payload === 'category_delete_unable'){\r\n                    alert('Unable to delete. This category is associated to a classication.')\r\n                  }else{\r\n                    dispatch(getCategories())\r\n                  }\r\n                }\r\n            }}>\r\n              <BsTrashFill />\r\n            </Button>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const data = categories;\r\n\r\n  const onFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    // alert(formData.get(\"cat_name\"));\r\n    const category = {};\r\n    formData.forEach(function (value, key) {\r\n      category[key] = value;\r\n    });\r\n    await dispatch(addCategory(category))\r\n    .then(() => dispatch(getCategories()))\r\n  };\r\n\r\n  return (\r\n    <ModalContainer\r\n      isModalOpen={isModalOpen}\r\n      toggleModal={toggleModal}\r\n      title={\"Manage Categories\"}\r\n      size=\"lg\"\r\n      backdrop={false}\r\n    >\r\n      <EditCategoryModal\r\n        data={editCategoryData}\r\n        isModalOpen={isEditCategoryModalOpen}\r\n        toggleModal={toggleEditCategoryModal}\r\n      />\r\n      <ModalBody>\r\n        <Form onSubmit={onFormSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"cat_name\">Category Name</Label>\r\n              <InputGroup>\r\n                <Input type=\"text\" id=\"cat_name\" name=\"cat_name\" required />\r\n                <Button type=\"submit\">Add</Button>\r\n              </InputGroup>\r\n          </FormGroup>\r\n        </Form>\r\n        <hr />\r\n        <DataTable\r\n          data={data}\r\n          columns={columns}\r\n          highlightOnHover\r\n          pagination\r\n          progressPending={isLoading}\r\n          progressComponent={<Spinner />}\r\n        />\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <IconatedButton\r\n          size=\"sm\"\r\n          onClick={() => toggleModal()}\r\n          name=\"Back\"\r\n          color=\"primary\"\r\n          icon={<BsArrowLeftCircleFill />}\r\n        />\r\n      </ModalFooter>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default ManageCategoryModal;\r\n","// Modal for Adding Classifications under CLassifications page\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Form,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { IconatedButton, ModalContainer } from \"../../Portal\";\r\nimport { BsFillPlusCircleFill, BsXCircleFill } from \"react-icons/bs\";\r\nimport ManageCategoryModal from \"../ManageCategoryModal/ManageCategoryModal\";\r\nimport { addClassification, getCategories, getClassifications } from \"../../../features/dts/classifications/classifications\";\r\n\r\nconst AddClassificationModal = ({ isModalOpen, toggleModal }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const [isAddCategoryModalOpen, toggleAddCategoryModal] = useState(false);\r\n  const { categories} = useSelector(state => state.classifications)\r\n\r\n  const categoryList = categories.map((cat, index) => (\r\n    <option value={cat.cat_id} key={index}>\r\n      {cat.cat_name}\r\n    </option>\r\n  ));\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <ModalContainer\r\n      isModalOpen={isModalOpen}\r\n      toggleModal={toggleModal}\r\n      title={\"Add Classification\"}\r\n      size=\"lg\"\r\n    >\r\n      <ManageCategoryModal\r\n        toggleModal={toggleAddCategoryModal}\r\n        isModalOpen={isAddCategoryModalOpen}\r\n      />\r\n      <Form\r\n        onSubmit={async (e) => {\r\n          e.preventDefault();\r\n          const formData = new FormData(e.target);\r\n          const classification = {};\r\n          formData.forEach(function (value, key) {\r\n            classification[key] = value;\r\n          });\r\n\r\n           await dispatch(addClassification(classification))\r\n           .then(() => {dispatch(getClassifications()); toggleModal()});\r\n        }}\r\n      >\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <div className=\"d-flex mb-1\">\r\n              <Label for=\"cat_id\">Category</Label>\r\n              <div className=\"ms-auto\">\r\n                <Button\r\n                  onClick={() =>\r\n                    toggleAddCategoryModal(!isAddCategoryModalOpen)\r\n                  }\r\n                  size=\"sm\"\r\n                  className=\"me-1\"\r\n                  color=\"success\"\r\n                  outline\r\n                >\r\n                  Manage Categories\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <Input type=\"select\" id=\"cat_id\" name=\"cat_id\">\r\n              {categoryList}\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"class_name\">Classification Name</Label>\r\n            <Input type=\"text\" id=\"class_name\" name=\"class_name\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"class_code\">Classification Code</Label>\r\n            <Input type=\"text\" id=\"class_code\" name=\"class_code\" />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"class_name\">Due(days)</Label>\r\n            <Input type=\"number\" id=\"class_due\" name=\"class_due\"  defaultValue={0} min=\"0\" />\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <IconatedButton\r\n            type=\"submit\"\r\n            size=\"sm\"\r\n            color=\"primary\"\r\n            name=\"Save\"\r\n            icon={<BsFillPlusCircleFill />}\r\n          />\r\n          <IconatedButton\r\n            size=\"sm\"\r\n            onClick={() => toggleModal()}\r\n            name=\"Cancel\"\r\n            color=\"dark\"\r\n            icon={<BsXCircleFill />}\r\n          />\r\n        </ModalFooter>\r\n      </Form>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default AddClassificationModal;\r\n","// Modal for editing classifications under Classification Page\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Form,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { IconatedButton, ModalContainer } from \"../../Portal\";\r\nimport { BsFillPlusCircleFill, BsXCircleFill } from \"react-icons/bs\";\r\nimport ManageCategoryModal from \"../ManageCategoryModal/ManageCategoryModal\";\r\nimport {  getCategories, getClassifications, updateClassification } from \"../../../features/dts/classifications/classifications\";\r\n\r\nconst EditClassificationModal = ({ isModalOpen, toggleModal, classificationData }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const [isAddCategoryModalOpen, toggleAddCategoryModal] = useState(false);\r\n  const { categories} = useSelector(state => state.classifications)\r\n\r\n  const categoryList = categories.map((cat, index) => (\r\n    <option value={cat.cat_id} key={index} selected={classificationData.cat_id === cat.cat_id && \"true\"}>\r\n      {cat.cat_name}\r\n    </option>\r\n  ));\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <ModalContainer\r\n      isModalOpen={isModalOpen}\r\n      toggleModal={toggleModal}\r\n      title={\"Edit Classification\"}\r\n      size=\"lg\"\r\n    >\r\n      <ManageCategoryModal\r\n        toggleModal={toggleAddCategoryModal}\r\n        isModalOpen={isAddCategoryModalOpen}\r\n      />\r\n      <Form\r\n        onSubmit={async (e) => {\r\n          e.preventDefault();\r\n          const formData = new FormData(e.target);\r\n          const classification = {};\r\n          formData.forEach(function (value, key) {\r\n            classification[key] = value;\r\n          });\r\n\r\n          classification['class_id'] = classificationData.class_id;\r\n          \r\n           await dispatch(updateClassification(classification))\r\n           .then(() => {dispatch(getClassifications()); toggleModal()});\r\n        }}\r\n      >\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <div className=\"d-flex mb-1\">\r\n              <Label for=\"cat_id\">Category</Label>\r\n              <div className=\"ms-auto\">\r\n                <Button\r\n                  onClick={() =>\r\n                    toggleAddCategoryModal(!isAddCategoryModalOpen)\r\n                  }\r\n                  size=\"sm\"\r\n                  className=\"me-1\"\r\n                  color=\"success\"\r\n                  outline\r\n                >\r\n                  Manage Categories\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <Input type=\"select\" id=\"cat_id\" name=\"cat_id\">\r\n              {categoryList}\r\n            </Input>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"class_name\">Classification Name</Label>\r\n            <Input type=\"text\" id=\"class_name\" name=\"class_name\" defaultValue={classificationData.class_name} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"class_code\">Classification Code</Label>\r\n            <Input type=\"text\" id=\"class_code\" name=\"class_code\" defaultValue={classificationData.class_code} />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"class_name\">Due(days)</Label>\r\n            <Input type=\"number\" id=\"class_due\" name=\"class_due\" defaultValue={classificationData.class_due} min={0} minLength={1} />\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <IconatedButton\r\n            type=\"submit\"\r\n            size=\"sm\"\r\n            color=\"primary\"\r\n            name=\"Save\"\r\n            icon={<BsFillPlusCircleFill />}\r\n          />\r\n          <IconatedButton\r\n            size=\"sm\"\r\n            onClick={() => toggleModal()}\r\n            name=\"Cancel\"\r\n            color=\"dark\"\r\n            icon={<BsXCircleFill />}\r\n          />\r\n        </ModalFooter>\r\n      </Form>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default EditClassificationModal;\r\n","// Container for attached files per communication\r\nimport React from 'react'\r\nconst _ = require('lodash')\r\nconst AttachmentsContainer = ({attachments = []}) => {\r\n  const attachmentLinks = attachments.map(attach => {\r\n      return(\r\n        <a href={attach.src} target=\"_blank\" rel=\"noopener noreferrer\" className='me-3'>\r\n            {attach.attach_name}\r\n        </a>\r\n      )\r\n    })\r\n  \r\n  if(_.isEmpty(attachments)){\r\n    return <></>\r\n  }\r\n  return (\r\n    <div className=\"bg-super-light-green rounded py-2 px-3 shadow\">\r\n        <span className=\"lead\">Attachments</span>\r\n        <div className=\"d-flex flex-wrap\">\r\n            {attachmentLinks} \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttachmentsContainer","// Scanned Copies Viewer\r\nimport React from \"react\";\r\nimport Gallery from \"react-grid-gallery\";\r\n\r\nconst ImageGallery = ({images=[], title}) => {\r\n  if(images.length > 0)\r\n  return (\r\n    <>\r\n    <div style={{overflow: 'auto', height: '400px'}}>\r\n      <span className=\"lead\">{title}</span>\r\n      <Gallery images={images} enableImageSelection = {false}/>\r\n    </div>\r\n    </>\r\n  );\r\n  else{\r\n    return <></>\r\n  }\r\n};\r\n\r\nexport default ImageGallery;\r\n","// View Communication Modal\r\nimport React, { useEffect } from \"react\";\r\nimport { Button, ModalBody, ModalFooter, Badge, CardFooter, CardBody, Card, CardHeader } from \"reactstrap\";\r\nimport { ModalContainer } from \"../../Portal\";\r\nimport AttachmentsContainer from \"../AttachmentsContainer/AttachmentsContainer\";\r\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\r\nimport moment from \"moment\";\r\nimport {  useDispatch, useSelector } from \"react-redux\";\r\nimport { getCommunication } from \"../../../features/dts/communications/communications\";\r\nimport { getAttachments, getScanned } from \"../../../Helpers/dts_helpers\";\r\nconst _ = require('lodash')\r\n\r\nconst ViewCommunicationModal = ({isModalOpen, toggleModal, com_id = 0}) => {\r\n  const {viewCommunicationData} = useSelector(state=> state.communication)\r\n  const apiServer = process.env.REACT_APP_API_URL;\r\n  const dispatch = useDispatch();\r\n    \r\n  useEffect(() => {\r\n    dispatch(getCommunication(com_id))\r\n  }, [dispatch, com_id])\r\n  \r\n  const UrgencyBadge = () => {\r\n    switch(com_urgency){\r\n      case 'OMG':\r\n        return <Badge color=\"danger\">OMG</Badge> \r\n      case 'Rush':\r\n        return <Badge color=\"warning\">Rush</Badge>\r\n      default:\r\n        return <Badge color=\"secondary\">Regular</Badge>\r\n    }\r\n  }\r\n\r\n  const {\r\n    com_controlNo, \r\n    com_source_name,\r\n    com_source_position,\r\n    com_source_office,\r\n    com_subject,\r\n    com_dateCreated,\r\n    com_other_remarks,\r\n    class_name,\r\n    cat_name,\r\n    scanned=[],\r\n    attachments=[],\r\n    employee= {},\r\n    com_due_date,\r\n    com_urgency\r\n  } = viewCommunicationData;\r\n\r\n  return (\r\n    <ModalContainer\r\n      isModalOpen={isModalOpen}\r\n      toggleModal={toggleModal}\r\n      title={com_controlNo}\r\n      size=\"xl\"\r\n    >\r\n    <ModalBody>\r\n    <div\r\n    >\r\n        <Card>\r\n          <CardHeader className=\"d-flex flex-column\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h4>{com_controlNo}</h4>\r\n            </div>\r\n            <div>\r\n              <UrgencyBadge />\r\n              {!_.isNull(com_due_date) && (\r\n                <Badge color=\"info\" className=\"ms-1\">\r\n                  Due Date: {moment(com_due_date).format(\"dddd, MMMM DD, YYYY\")}\r\n                </Badge>\r\n              )}\r\n              <i className=\"text-secondary d-block\">\r\n                Created by{\" \"}\r\n                {`${employee.emp_firstname} ${employee.emp_lastname}`} -{\" \"}\r\n                {moment(com_dateCreated).format(\"DD/MM/YYYY\")}\r\n              </i>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <h4 className=\"text-info\">{com_subject}</h4>\r\n            <ImageGallery\r\n              title={\"Scanned Copies\"}\r\n              images={getScanned(scanned)}\r\n            />\r\n            <br />\r\n            <AttachmentsContainer attachments={getAttachments(attachments)} />\r\n            <hr />\r\n\r\n            <div className=\"p-2\">\r\n              <span className=\"lead\">Other Remarks</span>\r\n              <p>{com_other_remarks}</p>\r\n            </div>\r\n          </CardBody>\r\n          <CardFooter>\r\n            <div>\r\n              <span>Source: </span>\r\n              <u>\r\n                <strong>{com_source_name}</strong>\r\n                {!_.isEmpty(com_source_position) && (\r\n                  <span>, {com_source_position}</span>\r\n                )}\r\n                {!_.isEmpty(com_source_office) && (\r\n                  <span>, {com_source_office}</span>\r\n                )}\r\n              </u>\r\n            </div>\r\n          </CardFooter>\r\n        </Card>\r\n    </div>\r\n        {/* <h6>Document Type: {class_name} {cat_name}</h6>\r\n        <h4 className=\"text-info\">Subject: {com_subject}</h4>\r\n        {com_urgency === 'Rush' ? <Badge color=\"danger\">Rush</Badge> : <Badge color=\"warning\">Urgent</Badge>}\r\n        {!_.isNull(com_due_date) && <Badge color=\"info\" className=\"ms-1\">Due Date: {moment(com_due_date).format('dddd, MMMM DD, YYYY')}</Badge>}\r\n        <p>\r\n          Source:{\" \"}\r\n          {`${com_source_name}, ${com_source_position}, ${com_source_office}`}\r\n        </p>\r\n        <i className=\"text-secondary\">\r\n          Created by {`${employee.emp_firstname} ${employee.emp_lastname}`} -{\" \"}\r\n          {moment(com_dateCreated).format(\"DD/MM/YYYY\")}\r\n        </i>\r\n        <hr />\r\n        <ImageGallery title={'Scanned Copies'} images={getScanned(scanned)} />\r\n        <br />\r\n        <AttachmentsContainer attachments={getAttachments(attachments)} />\r\n        <hr />\r\n        <div className=\"p-2\">\r\n        <span className=\"lead\">Other Remarks</span>\r\n        <p>{com_other_remarks}</p>\r\n        </div> */}\r\n    </ModalBody>\r\n    <ModalFooter>\r\n        <Button color=\"success\" onClick={toggleModal}>Okay</Button>\r\n    </ModalFooter> \r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default ViewCommunicationModal;\r\n","// For editing drafted communications in Drafts page\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Form,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Container,\r\n  InputGroup,\r\n  InputGroupText,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { IconatedButton, ModalContainer } from \"../../Portal\";\r\nimport { BsFillPlusCircleFill, BsXCircleFill } from \"react-icons/bs\";\r\nimport { getClassifications } from \"../../../features/dts/classifications/classifications\";\r\nimport moment from \"moment\";\r\nimport {\r\n  getDrafts,\r\n  resetNewAddedCommunication,\r\n  updateDraft,\r\n} from \"../../../features/dts/drafts/draftsSlice\";\r\nimport {\r\n  resetViewCommunicationData,\r\n  verifyControlNo,\r\n} from \"../../../features/dts/communications/communications\";\r\nimport ViewCommunicationModal from \"../ViewCommunicationModal/ViewCommunicationModal\";\r\nconst _ = require(\"lodash\");\r\n\r\nconst EditDraftModal = ({ isModalOpen, toggleModal, draftData, socket }) => {\r\n  const dispatch = useDispatch();\r\n  const { office_code } = useSelector((state) => state.user.user);\r\n  const { classifications } = useSelector((state) => state.classifications);\r\n  const { isControlNoExist } = useSelector((state) => state.communication);\r\n  const [dueDate, setDueDate] = useState(moment(draftData.com_due_date).format('YYYY-MM-DD'));\r\n  const [classCode, setClassCode] = useState(draftData.class_code);\r\n  const { newAddedCommunication, userToNotify } = useSelector(state => state.drafts)\r\n  const {viewCommunicationData} = useSelector((state) => state.communication);\r\n  const [isViewCommunicationModalOpen, toggleViewCommunicationModal] =\r\n    useState(false);\r\n\r\n  const classificationList = classifications.map((item, index) =>\r\n    item.class_id === draftData.class_id ? (\r\n      <option\r\n        value={item.class_id}\r\n        data-classcode={`${item.class_code}`}\r\n        key={index}\r\n        selected\r\n      >\r\n        {item.class_name} - {item.cat_name}\r\n      </option>\r\n    ) : (\r\n      <option\r\n        value={item.class_id}\r\n        data-classcode={`${item.class_code}`}\r\n        key={index}\r\n      >\r\n        {item.class_name} - {item.cat_name}\r\n      </option>\r\n    )\r\n  );\r\n  const onChangeDueDate = (e) => {\r\n    setDueDate(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getClassifications());\r\n  }, [dispatch]);\r\n\r\n  const onchangeClass = () => {\r\n    const classification = document.getElementById(\"class_id\");\r\n    var selected = classification.options[classification.selectedIndex];\r\n    const class_id = selected.getAttribute(\"value\");\r\n    const days = classifications.filter(\r\n      (data) => data.class_id === parseInt(class_id)\r\n    );\r\n    if (days[0] && days[0].class_due > 0) {\r\n      setDueDate(moment().add(days[0].class_due, \"d\").format(\"YYYY-MM-DD\"));\r\n    } else {\r\n      setDueDate(null);\r\n    }\r\n    setClassCode(selected.getAttribute(\"data-classcode\"));\r\n  };\r\n\r\n  const onChangeControlNo = (e) => {\r\n    const control_no = getControlNumber() + e.target.value;\r\n    if (control_no !== draftData.com_controlNo) {\r\n      dispatch(verifyControlNo(control_no));\r\n    }\r\n  };\r\n\r\n  const getControlNumber = () => {\r\n    const split_control_no = draftData.com_controlNo.split(\".\");\r\n    const split_series_no =\r\n      split_control_no[split_control_no.length - 1].split(\"-\");\r\n    split_series_no.pop();\r\n    const class_series_code = split_series_no.join(\"-\");\r\n    const series_date = split_series_no.slice(\r\n      Math.max(split_series_no.length - 2, 0)\r\n    );\r\n      console.log(series_date)\r\n    let control = `DARFO2.${office_code}`;\r\n    if (classCode !== \"\") {\r\n      control += \".\" + classCode + \"-\" + series_date.join(\"-\") + \"-\";\r\n    } else {\r\n      control += \".\" + class_series_code + \"-\";\r\n    }\r\n    return control;\r\n  };\r\n\r\n  const getSeriesCode = () => {\r\n    const split_series_no = draftData.com_controlNo.split(\"-\");\r\n    return split_series_no[split_series_no.length - 1];\r\n  };\r\n\r\n  const onFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const control_no = formData.get(\"control_no\");\r\n    formData.append(\"com_id\", draftData.com_id);\r\n    formData.set(\"control_no\", getControlNumber() + getSeriesCode());\r\n    formData.append(\"draft\", false);\r\n    const res = await dispatch(updateDraft(formData));\r\n    console.log(res.payload)\r\n    if(res.payload.communication){\r\n      toggleViewCommunicationModal(!isViewCommunicationModalOpen);\r\n      dispatch(getDrafts())\r\n    }\r\n  };\r\n\r\n  const onSaveDraft = async () => {\r\n    // console.log('click')\r\n    const formData = new FormData(document.getElementById(\"edit_draft_modal\"));\r\n    const control_no = formData.get(\"control_no\");\r\n    formData.append(\"com_id\", draftData.com_id);\r\n    formData.set(\"control_no\", getControlNumber() + getSeriesCode());\r\n    formData.append(\"draft\", true);\r\n    await dispatch(updateDraft(formData));\r\n    dispatch(getDrafts());\r\n    // toggleModal();\r\n  };\r\n\r\n\r\n  return (\r\n    <ModalContainer\r\n      isModalOpen={isModalOpen}\r\n      toggleModal={toggleModal}\r\n      title={\"Draft\"}\r\n      size=\"xl\"\r\n    >\r\n      <ViewCommunicationModal\r\n          isModalOpen={isViewCommunicationModalOpen}\r\n          toggleModal={\r\n          () => {\r\n            toggleViewCommunicationModal(!isViewCommunicationModalOpen);\r\n            dispatch(resetViewCommunicationData());\r\n            dispatch(resetNewAddedCommunication());\r\n            toggleModal();\r\n          }\r\n          }\r\n          com_id={newAddedCommunication}\r\n      />\r\n      <Form onSubmit={onFormSubmit} id=\"edit_draft_modal\">\r\n        <ModalBody>\r\n          <Container className=\"mt-2\">\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"control_no\">\r\n                    Control No. <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <InputGroup>\r\n                    <InputGroupText>{getControlNumber() + getSeriesCode()}</InputGroupText>\r\n                    {/* <Input\r\n                      size=\"sm\"\r\n                      id=\"control_no\"\r\n                      name=\"control_no\"\r\n                      type=\"text\"\r\n                      defaultValue={getSeriesCode()}\r\n                      invalid={isControlNoExist}\r\n                      onChange={onChangeControlNo}\r\n                    /> */}\r\n                    <FormFeedback>Control Number already exist</FormFeedback>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"class_id\">\r\n                    Classifications <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"class_id\"\r\n                    name=\"class_id\"\r\n                    type=\"select\"\r\n                    onChange={onchangeClass}\r\n                    required\r\n                  >\r\n                    <option value=\"\" data-classcode=\"00-0\">\r\n                      Select Classification\r\n                    </option>\r\n                    {classificationList}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"due_date\">Due Date</Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"due_date\"\r\n                    name=\"due_date\"\r\n                    type=\"date\"\r\n                    onChange={onChangeDueDate}\r\n                    value={_.isNull(dueDate) ? \"\" : dueDate}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"12\" className=\"border rounded rounded-4 p-2 mx-2\">\r\n                <h6>Source</h6>\r\n                <Row>\r\n                  <Col md=\"4\">\r\n                    <FormGroup>\r\n                      <Label for=\"source_name\">\r\n                        Name <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        bsSize=\"sm\"\r\n                        id=\"source_name\"\r\n                        name=\"source_name\"\r\n                        type=\"text\"\r\n                        defaultValue={draftData.com_source_name}\r\n                        required\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"4\">\r\n                    <FormGroup>\r\n                      <Label for=\"source_position\">\r\n                        Position\r\n                      </Label>\r\n                      <Input\r\n                        bsSize=\"sm\"\r\n                        id=\"source_position\"\r\n                        name=\"source_position\"\r\n                        type=\"text\"\r\n                        defaultValue={draftData.com_source_position}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"4\">\r\n                    <FormGroup>\r\n                      <Label for=\"source_office\">\r\n                        Office\r\n                      </Label>\r\n                      <Input\r\n                        bsSize=\"sm\"\r\n                        id=\"source_office\"\r\n                        name=\"source_office\"\r\n                        type=\"text\"\r\n                        defaultValue={draftData.com_source_office}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col md=\"12\">\r\n                <FormGroup>\r\n                  <Label for=\"subject\">\r\n                    Subject <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"subject\"\r\n                    name=\"subject\"\r\n                    type=\"textarea\"\r\n                    defaultValue={draftData.com_subject}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"date_received\">\r\n                    Date Received <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"date_received\"\r\n                    name=\"date_received\"\r\n                    type=\"date\"\r\n                    defaultValue={moment(draftData.com_dateReceived).format(\r\n                      \"YYYY-MM-DD\"\r\n                    )}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"urgency\">\r\n                    Urgency <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <Input bsSize=\"sm\" id=\"urgency\" name=\"urgency\" type=\"select\" required>\r\n                    {draftData.com_urgency === \"Rush\" ? (\r\n                      <>\r\n                        <option value=\"Rush\" selected>\r\n                          Rush\r\n                        </option>\r\n                        <option value=\"Urgent\">Urgent</option>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <option value=\"Rush\">Rush</option>\r\n                        <option value=\"Urgent\" selected>\r\n                          Urgent\r\n                        </option>\r\n                      </>\r\n                    )}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"scanned\">\r\n                    Scanned Copies\r\n                  </Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    id=\"scanned\"\r\n                    name=\"scanned\"\r\n                    type=\"file\"\r\n                    multiple\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"attachments\">\r\n                    Attachments\r\n                  </Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    id=\"attachments\"\r\n                    name=\"attachments\"\r\n                    type=\"file\"\r\n                    multiple\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"12\">\r\n                <FormGroup>\r\n                  <Label for=\"other_remarks\">\r\n                    Other Remarks\r\n                  </Label>\r\n                  <Input\r\n                    size=\"sm\"\r\n                    id=\"other_remarks\"\r\n                    name=\"other_remarks\"\r\n                    type=\"textarea\"\r\n                    defaultValue={draftData.com_other_remarks}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <IconatedButton\r\n            onClick={onSaveDraft}\r\n            size=\"sm\"\r\n            color=\"primary\"\r\n            name=\"Save Draft\"\r\n            icon={<BsFillPlusCircleFill />}\r\n          />\r\n          <IconatedButton\r\n            type=\"submit\"\r\n            size=\"sm\"\r\n            color=\"success\"\r\n            name=\"Add Communication\"\r\n            icon={<BsFillPlusCircleFill />}\r\n          />\r\n          <IconatedButton\r\n            size=\"sm\"\r\n            onClick={() => toggleModal()}\r\n            name=\"Cancel\"\r\n            color=\"dark\"\r\n            icon={<BsXCircleFill />}\r\n          />\r\n        </ModalFooter>\r\n      </Form>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default EditDraftModal;\r\n","/*\r\n  Notification module\r\n*/\r\nimport React, { useEffect } from 'react'\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport { useDispatch,  } from 'react-redux';\r\nimport { getInbox } from '../../../features/dts/inbox/inboxSlice';\r\nimport { Link } from 'react-router-dom';\r\nimport { decrementTaskCounter, setTasks } from '../../../features/dts/tasks/tasksSlice';\r\n\r\nconst Notification = ({socket}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    socket?.on('receiveNotification', (notification) => {\r\n      // console.log(notification)\r\n      NotificationManager.info(\r\n        <Link className='text-light' to={notification.link} onClick={() => {\r\n          dispatch(setTasks(notification.tasks))\r\n          dispatch(decrementTaskCounter())\r\n          // console.log(notification.tasks)\r\n        } }>{notification.message}</Link>\r\n        ,\r\n         notification.title, 30000);\r\n      dispatch(getInbox())\r\n    })\r\n  } , [socket, dispatch])\r\n  \r\n  return (\r\n    <>\r\n      <NotificationContainer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Notification","/*\r\n  Layout for urgency legends of communication\r\n*/\r\nimport React from 'react'\r\n\r\nconst InboxLegends = (props) => {\r\n  return (\r\n    <div className=\"d-flex flex-column align-items-end\">\r\n        <div className=\"d-flex\">\r\n            <div className=\"d-flex align-items-center justify-content-center\">\r\n                <div className=\"p-2 bg-danger\"></div>\r\n                <strong className='ms-2'>OMG</strong>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-center ms-3\">\r\n                <div className=\"p-2 bg-warning\"></div>\r\n                <strong className='ms-2'>Rush</strong>\r\n            </div>\r\n            <div className=\"d-flex align-items-center justify-content-center ms-3\">\r\n                <div className=\"p-2 bg-light border\"></div>\r\n                <strong className='ms-2'>Regular</strong>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InboxLegends","// Next button for View Task\r\nimport React from \"react\";\r\nimport { BsChevronRight } from \"react-icons/bs\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { IconatedButton } from \"../../Portal\";\r\nimport { useDispatch, useSelector } from \"react-redux/es/exports\";\r\nimport { incrementTaskCounter, taskComplete } from \"../../../features/dts/tasks/tasksSlice\";\r\n\r\nconst NextTaskButton = () => {\r\n  const { tasks, taskCounter } = useSelector((state) => state.tasks);\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch()\r\n  const {inbox_id} = useParams();\r\n  \r\n\r\n  const viewNextTask = async() => {\r\n    if(tasks.length > taskCounter + 1){\r\n      dispatch(incrementTaskCounter())\r\n      // navigate(`${location.pathname}/${tasks[taskCounter]}`);\r\n    }else{\r\n      await dispatch(taskComplete(inbox_id))\r\n      navigate('/dts/managementOfCommunications/inbox');\r\n    }\r\n  }\r\n\r\n  return (\r\n      <IconatedButton\r\n        size=\"md\"\r\n        color=\"primary\"\r\n        name={tasks.length === taskCounter + 1 ? 'Task Complete' : 'Next'}\r\n        icon={<BsChevronRight />}\r\n        onClick={viewNextTask}\r\n      />\r\n  );\r\n};\r\n\r\nexport default NextTaskButton;\r\n","// Checkboxes in Routing Form\r\nimport React, { useState } from \"react\";\r\nimport { FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nconst RoutingCheckbox = ({ name, desc, id, textbox, defaultValue, isLegendContains, value }) => {\r\n  const [isCheck, setCheck] = useState(isLegendContains(value));\r\n\r\n  const checkBox = () => {\r\n    setCheck(!isCheck);\r\n  };\r\n\r\n  return (\r\n    <FormGroup check>\r\n      <Input type=\"checkbox\" name={name} id={id} onChange={checkBox} checked={isCheck} value={value} />\r\n      {desc && (\r\n        <Label check for={id} className='wrap'>\r\n          {desc}\r\n        </Label>\r\n      )}\r\n      {textbox && <Input type=\"textarea\" defaultValue={defaultValue} disabled={!isCheck} rows='3' name={`${value}_text`} />}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default RoutingCheckbox;\r\n","// For editing drafted communications in Drafts page\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Form,\r\n  ModalFooter,\r\n  ModalBody,\r\n  Container,\r\n  InputGroup,\r\n  InputGroupText,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport { IconatedButton, ModalContainer } from \"../../Portal\";\r\nimport { BsFillPlusCircleFill, BsXCircleFill } from \"react-icons/bs\";\r\nimport { getClassifications } from \"../../../features/dts/classifications/classifications\";\r\nimport moment from \"moment\";\r\nimport {\r\n  verifyControlNo,\r\n} from \"../../../features/dts/communications/communications\";\r\nimport { editCommunication } from \"../../../features/dts/inbox/inboxSlice\";\r\nimport { getCommunication } from \"../../../features/dts/tasks/tasksSlice\";\r\nimport { useLocation } from \"react-router-dom\";\r\nconst _ = require(\"lodash\");\r\n\r\nconst EditCommunicationModal = ({ isModalOpen, toggleModal, comData }) => {\r\n  const dispatch = useDispatch();\r\n  const { office_code } = useSelector((state) => state.user.user);\r\n  const { classifications } = useSelector((state) => state.classifications);\r\n  const { isControlNoExist } = useSelector((state) => state.communication);\r\n  const [dueDate, setDueDate] = useState(moment(comData.com_due_date).format('YYYY-MM-DD'));\r\n  const [classCode, setClassCode] = useState(comData.class_code);\r\n  const location = useLocation()\r\n\r\n  const classificationList = classifications.map((item, index) =>\r\n    item.class_id === comData.class_id ? (\r\n      <option\r\n        value={item.class_id}\r\n        data-classcode={`${item.class_code}`}\r\n        key={index}\r\n        selected\r\n      >\r\n        {item.class_name} - {item.cat_name}\r\n      </option>\r\n    ) : (\r\n      <option\r\n        value={item.class_id}\r\n        data-classcode={`${item.class_code}`}\r\n        key={index}\r\n      >\r\n        {item.class_name} - {item.cat_name}\r\n      </option>\r\n    )\r\n  );\r\n  const onChangeDueDate = (e) => {\r\n    setDueDate(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getClassifications());\r\n  }, [dispatch]);\r\n\r\n  const onchangeClass = () => {\r\n    const classification = document.getElementById(\"class_id\");\r\n    var selected = classification.options[classification.selectedIndex];\r\n    const class_id = selected.getAttribute(\"value\");\r\n    const days = classifications.filter(\r\n      (data) => data.class_id === parseInt(class_id)\r\n    );\r\n    if (days[0] && days[0].class_due > 0) {\r\n      setDueDate(moment().add(days[0].class_due, \"d\").format(\"YYYY-MM-DD\"));\r\n    } else {\r\n      setDueDate(null);\r\n    }\r\n    setClassCode(selected.getAttribute(\"data-classcode\"));\r\n  };\r\n\r\n  const onChangeControlNo = (e) => {\r\n    const control_no = getControlNumber() + e.target.value;\r\n    if (control_no !== comData.com_controlNo) {\r\n      dispatch(verifyControlNo(control_no));\r\n    }\r\n  };\r\n\r\n  const getControlNumber = () => {\r\n    const split_control_no = comData.com_controlNo.split(\".\");\r\n    const split_series_no =\r\n      split_control_no[split_control_no.length - 1].split(\"-\");\r\n    split_series_no.pop();\r\n    const class_series_code = split_series_no.join(\"-\");\r\n    const series_date = split_series_no.slice(\r\n      Math.max(split_series_no.length - 2, 0)\r\n    );\r\n\r\n    let control = `DARFO2.${office_code}`;\r\n    if (classCode !== \"\") {\r\n      control += \".\" + classCode + \"-\" + series_date.join(\"-\") + \"-\";\r\n    } else {\r\n      control += \".\" + class_series_code + \"-\";\r\n    }\r\n    return control;\r\n  };\r\n\r\n  const getSeriesCode = () => {\r\n    const split_series_no = comData.com_controlNo.split(\"-\");\r\n    return split_series_no[split_series_no.length - 1];\r\n  };\r\n\r\n  const onSaveCommunication = async (e) => {\r\n    e.preventDefault()\r\n    const formData = new FormData(document.getElementById(\"edit_communication_modal\"));\r\n    const control_no = formData.get(\"control_no\");\r\n    formData.append(\"com_id\", comData.com_id);\r\n    formData.set(\"control_no\", getControlNumber() + getSeriesCode());\r\n    formData.append(\"draft\", false);\r\n    const res = await dispatch(editCommunication(formData));\r\n    console.log(res.payload)\r\n    if(res.payload === 'edit_success'){\r\n      dispatch(getCommunication(comData.com_id))\r\n    }\r\n    toggleModal();\r\n  };\r\n\r\n  const UrgencyOptions = () => {\r\n    const urgency = ['Regular', 'Rush', 'OMG'];\r\n\r\n    return urgency.map(urg => {\r\n      return <option value={urg} selected={urg === comData.com_urgency}>\r\n              {urg}\r\n            </option>\r\n    })\r\n    \r\n  }\r\n\r\n  return (\r\n    <ModalContainer\r\n      isModalOpen={isModalOpen}\r\n      toggleModal={toggleModal}\r\n      title={\"Edit Communication\"}\r\n      size=\"xl\"\r\n    >\r\n\r\n      <Form onSubmit={onSaveCommunication} id=\"edit_communication_modal\">\r\n        <ModalBody>\r\n          <Container className=\"mt-2\">\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"control_no\">\r\n                    Control No. <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <InputGroup>\r\n                    <InputGroupText>{getControlNumber() + getSeriesCode()}</InputGroupText>\r\n                    {/* <Input\r\n                      size=\"sm\"\r\n                      id=\"control_no\"\r\n                      name=\"control_no\"\r\n                      type=\"text\"\r\n                      defaultValue={getSeriesCode()}\r\n                      invalid={isControlNoExist}\r\n                      onChange={onChangeControlNo}\r\n                    /> */}\r\n                    <FormFeedback>Control Number already exist</FormFeedback>\r\n                  </InputGroup>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"class_id\">\r\n                    Classifications <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"class_id\"\r\n                    name=\"class_id\"\r\n                    type=\"select\"\r\n                    onChange={onchangeClass}\r\n                    required\r\n                  >\r\n                    <option value=\"\" data-classcode=\"00-0\">\r\n                      Select Classification\r\n                    </option>\r\n                    {classificationList}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"due_date\">Due Date</Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"due_date\"\r\n                    name=\"due_date\"\r\n                    type=\"date\"\r\n                    onChange={onChangeDueDate}\r\n                    value={_.isNull(dueDate) ? \"\" : dueDate}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"12\" className=\"border rounded rounded-4 p-2 mx-2\">\r\n                <h6>Source</h6>\r\n                <Row>\r\n                  <Col md=\"4\">\r\n                    <FormGroup>\r\n                      <Label for=\"source_name\">\r\n                        Name <span className=\"text-danger\">*</span>\r\n                      </Label>\r\n                      <Input\r\n                        bsSize=\"sm\"\r\n                        id=\"source_name\"\r\n                        name=\"source_name\"\r\n                        type=\"text\"\r\n                        defaultValue={comData.com_source_name}\r\n                        required\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"4\">\r\n                    <FormGroup>\r\n                      <Label for=\"source_position\">\r\n                        Position\r\n                      </Label>\r\n                      <Input\r\n                        bsSize=\"sm\"\r\n                        id=\"source_position\"\r\n                        name=\"source_position\"\r\n                        type=\"text\"\r\n                        defaultValue={comData.com_source_position}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"4\">\r\n                    <FormGroup>\r\n                      <Label for=\"source_office\">\r\n                        Office\r\n                      </Label>\r\n                      <Input\r\n                        bsSize=\"sm\"\r\n                        id=\"source_office\"\r\n                        name=\"source_office\"\r\n                        type=\"text\"\r\n                        defaultValue={comData.com_source_office}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col md=\"12\">\r\n                <FormGroup>\r\n                  <Label for=\"subject\">\r\n                    Subject <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"subject\"\r\n                    name=\"subject\"\r\n                    type=\"textarea\"\r\n                    defaultValue={comData.com_subject}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"date_received\">\r\n                    Date Received <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"date_received\"\r\n                    name=\"date_received\"\r\n                    type=\"date\"\r\n                    defaultValue={moment(comData.com_dateReceived).format(\r\n                      \"YYYY-MM-DD\"\r\n                    )}\r\n                    required\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"urgency\">\r\n                    Urgency <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <Input bsSize=\"sm\" id=\"urgency\" name=\"urgency\" type=\"select\" required>\r\n                    <UrgencyOptions />\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"scanned\">\r\n                    Scanned Copies\r\n                  </Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"scanned\"\r\n                    name=\"scanned\"\r\n                    type=\"file\"\r\n                    multiple\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label for=\"attachments\">\r\n                    Attachments\r\n                  </Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"attachments\"\r\n                    name=\"attachments\"\r\n                    type=\"file\"\r\n                    multiple\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"12\">\r\n                <FormGroup>\r\n                  <Label for=\"other_remarks\">\r\n                    Other Remarks\r\n                  </Label>\r\n                  <Input\r\n                    bsSize=\"sm\"\r\n                    id=\"other_remarks\"\r\n                    name=\"other_remarks\"\r\n                    type=\"textarea\"\r\n                    defaultValue={comData.com_other_remarks}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <IconatedButton\r\n            type='submit'\r\n            size=\"sm\"\r\n            color=\"primary\"\r\n            name=\"Save\"\r\n            disabled={isControlNoExist}\r\n            icon={<BsFillPlusCircleFill />}\r\n          />\r\n          <IconatedButton\r\n            size=\"sm\"\r\n            onClick={() => toggleModal()}\r\n            name=\"Cancel\"\r\n            color=\"dark\"\r\n            icon={<BsXCircleFill />}\r\n          />\r\n        </ModalFooter>\r\n      </Form>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default EditCommunicationModal;\r\n","// Routing Tab per recipient\r\nimport React from \"react\";\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport { IconatedButton } from \"../../Portal\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { closeTab } from \"../../../features/dts/routing/routingSlice\";\r\n\r\nconst RoutingTab = ({label, username}) => {\r\n  const dispatch = useDispatch();\r\n  // console.log(name)\r\n  return (\r\n    <div active className=\"d-flex align-items-center justify-content-between\" style={{minWidth:'200px'}}>\r\n      {label} &nbsp;\r\n      <IconatedButton type='button' onClick={(e) => {\r\n        dispatch(closeTab(username))\r\n      }} icon={<BsXLg />} color=\"danger\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoutingTab;\r\n","import Select from \"react-select\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledSelect = styled(Select)`\r\n    .select__control{\r\n        min-width: 300px\r\n    }\r\n    @media only screen and (max-width:430px){\r\n        .select__control{\r\n            min-width: 230px !important\r\n        }\r\n    }\r\n`","// Button for adding recipients (Group or User)\r\nimport React, { useEffect } from \"react\";\r\nimport { Button, ButtonGroup, InputGroup } from \"reactstrap\";\r\nimport { BsPlusLg, BsXLg } from \"react-icons/bs\";\r\nimport { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAccounts, getGroups } from \"../../../features/Portal/accountsSlice\";\r\nimport { getOffices } from \"../../../features/Portal/officesSlice\";\r\nimport { setRoutingRecipients } from \"../../../features/dts/routing/routingSlice\";\r\nimport { StyledSelect } from \"./AddRecipientButton.styled\";\r\n\r\nconst AddRecipientButton = () => {\r\n  const [showSelectRecipient, setShowSelectRecipient] = useState(false);\r\n  const [showUserSearch, setShowUsersSearch] = useState(false);\r\n  const [showGroup, setShowGroup] = useState(false);\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [selectedGroup, setSelectedGroup] = useState([]);\r\n  const { routingRecipients } = useSelector((state) => state.routing);\r\n  const { users, groups } = useSelector((state) => state.accounts);\r\n  const { offices } = useSelector((state) => state.offices);\r\n  const { user } = useSelector((state) => state.user);\r\n  const [usersUnder, setUsersUnder] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  // events\r\n  const onShowUsers = () => {\r\n    setShowSelectRecipient(false);\r\n    setShowUsersSearch(true);\r\n  };\r\n\r\n  const onShowGroups = () => {\r\n    setShowSelectRecipient(false);\r\n    setShowGroup(true);\r\n  };\r\n\r\n  const onSelectUser = (selectedUsersData) => {\r\n    setSelectedUsers(selectedUsersData);\r\n  };\r\n  const onSelectGroup = (selectedGroup) => {\r\n    setSelectedGroup(selectedGroup);\r\n  };\r\n\r\n  const onAddUsers = () => {\r\n    dispatch(setRoutingRecipients(selectedUsers));\r\n    setShowSelectRecipient(false);\r\n    setShowUsersSearch(false);\r\n  };\r\n\r\n  const onAddGroup = () => {\r\n    dispatch(setRoutingRecipients(selectedGroup));\r\n    setShowSelectRecipient(false);\r\n    setShowGroup(false);\r\n  };\r\n\r\n  //end of events\r\n  const usersList = usersUnder\r\n    .filter(\r\n      (user) =>\r\n        !routingRecipients.map((r) => r.value).includes(user.user_username)\r\n    )\r\n    .map((user) => {\r\n      return {\r\n        user_id: user.user_id,\r\n        user_username: user.user_username,\r\n        user_fullname: `${user.emp_firstname}  ${user.emp_lastname} - ${user.office_code}`,\r\n        role_name: user.role_name,\r\n        role_id: user.role_id,\r\n        value: user.user_username,\r\n        label: `${user.emp_firstname}  ${user.emp_lastname} - ${user.office_code}`,\r\n        type: \"user\",\r\n      };\r\n    });\r\n\r\n  const groupsList = groups\r\n    // .filter(\r\n    //   (group) =>\r\n    //     !routingRecipients.map((r) => r.value).includes(group.group_id)\r\n    // )\r\n    .map((group) => {\r\n      return {\r\n        value: group.group_id,\r\n        label: group.group_name,\r\n        type: \"group\",\r\n      };\r\n    });\r\n\r\n  useEffect(() => {\r\n    dispatch(getAccounts());\r\n    dispatch(getGroups());\r\n    dispatch(getOffices());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const filterUserByRole = users.filter(\r\n      (data) =>\r\n        !data.role_name.includes(\"Process-level\") &&\r\n        (!data.role_name.includes(\"Encoder\") || !user.role_name.includes('Process-level')) &&\r\n        (!data.role_name.includes(\"Reviewer\") || !user.role_name.includes('Process-level')) &&\r\n        !data.role_name.includes(\"Admin\") &&\r\n        data.user_id !== user.user_id\r\n    );\r\n\r\n    let officesUnderAll = [];\r\n\r\n    let officesUnder = offices.filter((office) => {\r\n      return office.office_under === user.office_code;\r\n    });\r\n\r\n    officesUnderAll = offices\r\n      .filter((office) => {\r\n        return (\r\n          officesUnder\r\n            .map((data) => data.office_code)\r\n            .includes(office.office_under) ||\r\n          office.office_code === user.office_code ||\r\n          office.office_under === user.office_code\r\n        );\r\n      })\r\n      .map((office) => office.office_code);\r\n\r\n    const usersFilterByOffice = filterUserByRole.filter((data) => {\r\n      return officesUnderAll.includes(data.office_code);\r\n    });\r\n\r\n    if(user.role_name.includes('Process-level')){\r\n      // console.log(filterUserByRole)\r\n      setUsersUnder(filterUserByRole);\r\n      \r\n    }else{\r\n      setUsersUnder(usersFilterByOffice);\r\n    }\r\n\r\n  }, [offices, user]);\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center\" style={{ zIndex: 100 }}>\r\n      {showSelectRecipient && (\r\n        <ButtonGroup>\r\n          <Button type=\"button\" color=\"success\" onClick={onShowUsers}>\r\n            User\r\n          </Button>\r\n          <Button type=\"button\" color=\"warning\" onClick={onShowGroups}>\r\n            Group\r\n          </Button>\r\n        </ButtonGroup>\r\n      )}\r\n\r\n      {showUserSearch && !showSelectRecipient && (\r\n        <>\r\n          <StyledSelect\r\n            options={usersList}\r\n            isMulti\r\n            onChange={onSelectUser}\r\n            className=\"basic-multi-select\"\r\n            classNamePrefix=\"select\"\r\n          />\r\n          <Button color=\"success\" onClick={onAddUsers}>\r\n            Add\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {showGroup && !showSelectRecipient && (\r\n        <>\r\n          <StyledSelect\r\n            options={groupsList}\r\n            isMulti\r\n            onChange={onSelectGroup}\r\n            className=\"basic-multi-select\"\r\n            classNamePrefix=\"select\"\r\n          />\r\n          <Button color=\"success\" onClick={onAddGroup}>\r\n            Add\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {showSelectRecipient || showUserSearch || showGroup ? (\r\n        <Button\r\n          color=\"danger\"\r\n          type=\"button\"\r\n          className=\"ms-2\"\r\n          onClick={() => {\r\n            setShowSelectRecipient(false);\r\n            setShowUsersSearch(false);\r\n            setShowGroup(false);\r\n            setSelectedUsers([]);\r\n          }}\r\n        >\r\n          <BsXLg />\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          color=\"primary\"\r\n          type=\"button\"\r\n          className=\"ms-2\"\r\n          onClick={() => {\r\n            setShowSelectRecipient(true);\r\n            setSelectedUsers([]);\r\n          }}\r\n        >\r\n          Add Recipient/s &nbsp;\r\n          <BsPlusLg />\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRecipientButton;\r\n","import React from \"react\";\r\nimport { ModalBody } from \"reactstrap\";\r\nimport { getAttachments, getScanned } from \"../../../Helpers/dts_helpers\";\r\nimport { ContentLoader, ModalContainer } from \"../../Portal\";\r\nimport AttachmentsContainer from \"../AttachmentsContainer/AttachmentsContainer\";\r\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\r\n\r\nconst ViewUploadsModal = ({isOpen, scanned, attachments, setOpen, isLoading}) => {\r\n  return (\r\n    <ModalContainer\r\n        isModalOpen={isOpen}\r\n        toggleModal={setOpen}\r\n        title={\"View Uploads\"}\r\n        size=\"lg\"\r\n      >\r\n        <ModalBody>\r\n          <ContentLoader isLoading={isLoading}>\r\n            {\r\n                scanned.length === 0 && attachments.length === 0 ? <p className=\"lead text-info text-center\">No Uploads To Display</p> :\r\n                <>\r\n                    <ImageGallery title={\"Scanned Copies\"} images={getScanned(scanned)} />\r\n                    <AttachmentsContainer attachments={getAttachments(attachments)} />\r\n                </>\r\n            }\r\n          </ContentLoader>\r\n        </ModalBody>\r\n      </ModalContainer>\r\n  )\r\n}\r\n\r\nexport default ViewUploadsModal","import React, { useState } from \"react\";\r\nimport { BsPaperclip } from \"react-icons/bs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"reactstrap\";\r\nimport { getComUploads } from \"../../../features/dts/uploads/uploadsSlice\";\r\nimport ViewUploadsModal from \"../ViewUploadsModal/ViewUploadsModal\";\r\n\r\nconst TrailBody = ({ active, trail, by, com_id, act_id }) => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const {scanned, attachments, isLoading} = useSelector(state => state.uploads)\r\n\r\n  const viewUploads = (type) => {\r\n    switch(type){\r\n      case 'act':\r\n        // console.log(`act ${act_id}`)\r\n        dispatch(getComUploads({act_id}))\r\n        break;\r\n      case 'signed':\r\n        // console.log(`signed_attach_id ${act_id}`)\r\n        dispatch(getComUploads({signed_attach_id: act_id}))\r\n        break;\r\n      default:\r\n        // console.log(`com ${com_id}`);\r\n        dispatch(getComUploads({com_id}))\r\n        break;\r\n    }\r\n    setOpen(!isOpen)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"border w-100 rounded p-2 ms-3\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <h6 className={`${active && \"text-success\"}`}>{trail}</h6>\r\n          { trail.includes(\"Communication has been created\") && (\r\n          <Button\r\n            outline\r\n            className=\"ms-auto d-block mb-3\"\r\n            color=\"primary p-1\"\r\n            style={{ fontSize: \"16px\" }}\r\n            onClick={() => viewUploads('com')}\r\n          >\r\n            <BsPaperclip />\r\n          </Button>\r\n        )}\r\n        { trail.includes(\"Added action taken.\" )&& (\r\n          <Button\r\n            outline\r\n            className=\"ms-auto d-block mb-3\"\r\n            color=\"primary p-1\"\r\n            style={{ fontSize: \"16px\" }}\r\n            onClick={() => viewUploads('act')}\r\n          >\r\n            <BsPaperclip />\r\n          </Button>\r\n        )}\r\n        { trail.includes('Communication complied') && (\r\n          <Button\r\n            outline\r\n            className=\"ms-auto d-block mb-3\"\r\n            color=\"primary p-1\"\r\n            style={{ fontSize: \"16px\" }}\r\n            onClick={() => viewUploads('signed')}\r\n          >\r\n            <BsPaperclip />\r\n          </Button>\r\n        )}\r\n        </div>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <i>by {by}</i>\r\n        </div>\r\n      </div>\r\n        \r\n      <ViewUploadsModal isOpen={isOpen} scanned={scanned} attachments={attachments} setOpen={setOpen} isLoading={isLoading} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrailBody;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nconst TrailBullet = ({active, date}) => {\r\n  return (\r\n    <div className=\"d-flex p-0\" style={{fontSize: '.8rem'}}>\r\n      <span className=\"text-center\">\r\n        {moment(date).format(\"DD MMM YYYY hh:mm A\")}\r\n      </span>\r\n      <div\r\n        className={`rounded-circle bg-secondary ${active && 'bg-success'} p-2 align-self-start`}\r\n        style={{ zIndex: \"2\" }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrailBullet;\r\n","import React from 'react'\r\nimport TrailBody from './TrailBody'\r\nimport TrailBullet from './TrailBullet'\r\n\r\nconst TrailContainer = ({active, trail, by, date, com_id, act_id}) => {\r\n  return (\r\n    <div className='d-flex align-items-center mb-3'>\r\n        <TrailBullet active={active} date={date} />\r\n        <TrailBody active={active} trail={trail} by={by} com_id={com_id} act_id={act_id} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TrailContainer","// View Trail Modal\r\nimport React from \"react\";\r\nimport { ContentLoader, ModalContainer } from \"../../Portal\";\r\nimport { ModalBody } from \"reactstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport TrailContainer from \"./TrailContainer\";\r\n\r\nconst ViewTrailModal = ({ isModalOpen, toggleModal }) => {\r\n  const { isLoading, errorMessage, trails } = useSelector(\r\n    (state) => state.trail\r\n  );\r\n\r\n  const document_trail = trails.map((trail, index) => {\r\n    const by = `${trail.emp_firstname} ${trail.emp_middlename[0]} ${trail.emp_lastname} - ${trail.office_code}`;\r\n    return (\r\n      <TrailContainer\r\n        key={index}\r\n        active={index === 0}\r\n        trail={trail.trail_description}\r\n        act_id={trail.act_id}\r\n        com_id={trail.com_id}\r\n        by={by}\r\n        date={trail.trail_date}\r\n      />\r\n    );\r\n  });\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ModalContainer\r\n        isModalOpen={isModalOpen}\r\n        toggleModal={toggleModal}\r\n        title={\"Document Trail\"}\r\n        size=\"md\"\r\n      >\r\n        <ModalBody>\r\n          <ContentLoader isLoading={isLoading} errorMessage={errorMessage}>\r\n            {document_trail}\r\n          </ContentLoader>\r\n        </ModalBody>\r\n      </ModalContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewTrailModal;\r\n","// Advance search bar component\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  BsFillCaretDownFill,\r\n  BsFillCaretUpFill,\r\n  BsPlusLg,\r\n  BsSearch,\r\n  BsTrashFill,\r\n} from \"react-icons/bs\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Collapse,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { IconatedButton } from \"../../Portal\";\r\nimport \"react-date-range/dist/styles.css\"; // main css file\r\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\r\nimport { addDays, subDays } from \"date-fns\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\"; \r\n\r\nconst AdvanceSearchBar = ({onFilterCom, communications}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [state, setState] = useState([\r\n    {\r\n      startDate: subDays( new Date(), 7),\r\n      endDate:new Date(),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n  const [filters, setFilter] = useState([]);\r\n  const [filterText, setFilterText] = useState('None');\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const addFilter = () => {\r\n    setFilter([...filters, filters.length + 1]);\r\n  };\r\n  const deleteFilter = (e) => {\r\n    const id = e.target.getAttribute(\"data-id\");\r\n    document.getElementById(id).remove();\r\n  };\r\n  const filtersMap = filters.map((index) => {\r\n    return (\r\n      <Form className=\"d-flex mb-2 filters\" id={\"filterForm\" + index} onSubmit={e => e.preventDefault()} key={index}>\r\n        <Input type=\"select\" className=\"me-2\" name=\"column\">\r\n          <option value=\"control_no\">Control Number</option>\r\n          <option value=\"subject\">Subject</option>\r\n          <option value=\"source\">Source</option>\r\n          <option value=\"classification\">Classification</option>\r\n        </Input>\r\n        <Input type=\"select\" className=\"me-2\" name=\"operator\">\r\n          <option value=\"contains\">contains</option>\r\n          <option value=\"is\">is</option>\r\n        </Input>\r\n        <Input type=\"text\" className=\"me-2\" name=\"search_value\" />\r\n        <Button\r\n          color=\"danger\"\r\n          size=\"sm\"\r\n          data-id={\"filterForm\" + index}\r\n          onClick={deleteFilter}\r\n        >\r\n          <BsTrashFill style={{ pointerEvents: \"none\" }} />\r\n        </Button>\r\n      </Form>\r\n    );\r\n  });\r\n\r\n  const onFilter = () => {\r\n    const filterArray = [];\r\n    const { startDate, endDate } = state[0];\r\n    const filters = document.querySelectorAll(\".filters\");\r\n    filters.forEach((filter) => {\r\n      const formData = new FormData(filter);\r\n\r\n      const formObject = {};\r\n      formData.forEach((value, key) => {\r\n        formObject[key] = value;\r\n      });\r\n\r\n      filterArray.push(formObject);\r\n    });\r\n\r\n    const start = moment(startDate).format(\"MM-DD-YYYY\");\r\n    const end = moment(endDate).format(\"MM-DD-YYYY\");\r\n\r\n    const filterComms = communications.filter((com) => {\r\n      const com_data = {\r\n        control_no: com.com_controlNo,\r\n        subject: com.com_subject,\r\n        source: `${com.com_source_name}, ${com.com_source_position}, ${com.com_source_office}`,\r\n        encoded_by: `${com.emp_firstname} ${com.emp_lastname} - ${com.office_code}`,\r\n        classification: `${com.cat_name} ${com.class_name}`,\r\n        date_received: moment(com.com_dateReceived).format(\"MM-DD-YYYY\"),\r\n      };\r\n\r\n      const isTrue = filterArray.map((filter_array) => {\r\n        if (filter_array.operator === \"is\") {\r\n          return com_data[filter_array.column] === filter_array.search_value;\r\n        } else {\r\n          return com_data[filter_array.column]\r\n            .toLowerCase()\r\n            .includes(filter_array.search_value.toLowerCase());\r\n        }\r\n      });\r\n\r\n      return (\r\n        !isTrue.includes(false) &&\r\n        moment(start).isSameOrBefore(com_data.date_received) &&\r\n        moment(end).isSameOrAfter(com_data.date_received)\r\n      );\r\n    });\r\n\r\n    setFilterText(() => {\r\n      const filters = filterArray.map(f_item => {\r\n        let key = ''\r\n        switch(f_item.column){\r\n          case 'control_no':\r\n            key='Control Number'\r\n            break;\r\n          case 'subject':\r\n            key='Subject'\r\n            break;\r\n          case 'source':\r\n            key='Source'\r\n            break;\r\n          case 'encoded_by':\r\n            key='Encoded By'\r\n            break;\r\n          case 'date_received':\r\n            key='Date Received'\r\n            break;\r\n          case 'classification':\r\n            key='Classification'\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        return `\"${key}\" ${f_item.operator} \"${f_item.search_value}\"`;\r\n      })\r\n      return filters.join(', ') + ` from ${start} to ${end}`;\r\n    });\r\n    onFilterCom(filterComms);\r\n    toggle();\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <IconatedButton\r\n        name=\"Advanced Search\"\r\n        icon={isOpen ? <BsFillCaretUpFill /> : <BsFillCaretDownFill />}\r\n        onClick={toggle}\r\n      />\r\n      <Collapse isOpen={isOpen} >\r\n        <div className=\"d-flex justify-content-center\"><Card className=\"shadow\">\r\n          <CardBody>\r\n            <div className=\"d-lg-flex justify-content-center align-items-center\">\r\n              <div className=\"me-md-5\">\r\n                <FormGroup>\r\n                  <Label for=\"filter\">\r\n                    Filters &nbsp;\r\n                    <IconatedButton\r\n                      name=\"Add Filter\"\r\n                      color=\"secondary\"\r\n                      icon={<BsPlusLg />}\r\n                      className=\"mb-2\"\r\n                      onClick={addFilter}\r\n                    />\r\n                  </Label>\r\n                  {filtersMap}\r\n                </FormGroup>\r\n              </div>\r\n              <FormGroup>\r\n                <Label for=\"daterange\">Date Range:</Label>\r\n                <br />\r\n                <DateRange\r\n                  editableDateInputs={true}\r\n                  onChange={(item) => setState([item.selection])}\r\n                  moveRangeOnFirstSelection={false}\r\n                  ranges={state}\r\n                />\r\n              </FormGroup>\r\n            </div>\r\n            <IconatedButton\r\n              name=\"Apply Search\"\r\n              icon={<BsSearch />}\r\n              className=\"d-block mx-auto\"\r\n              onClick={onFilter}\r\n              size=\"md\"\r\n              color=\"success\"\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n        </div>\r\n      </Collapse>\r\n      <br />\r\n      <i className=\"text-dark\">Filters: <span className=\"text-success\">{filterText}</span></i>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvanceSearchBar;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { FormFeedback, FormGroup, FormText, Input, Label } from \"reactstrap\";\r\nconst _ = require('lodash')\r\n\r\nconst InputFileImage = ({label = 'Scanned Copies', required = false}) => {\r\n  const [uploadInvalid, setUploadInvalid] = useState({\r\n    scanned: false,\r\n    attachments: false,\r\n  });\r\n  const onUpload = (e) => {\r\n    const maxfilesize = 25000000;\r\n    const uploadFile = e.target;\r\n    const inputName = uploadFile.getAttribute(\"name\");\r\n    if (!_.isEmpty(uploadFile.files)) {\r\n      if (uploadFile.files[0].size > maxfilesize) {\r\n        setUploadInvalid({ ...uploadInvalid, [inputName]: true });\r\n      } else {\r\n        setUploadInvalid({ ...uploadInvalid, [inputName]: false });\r\n      }\r\n    } else {\r\n      setUploadInvalid({ ...uploadInvalid, [inputName]: false });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      <Label for=\"scanned\">\r\n        {label}\r\n        {required && <span className=\"text-danger\">*</span>}\r\n      </Label>\r\n      <Input\r\n        onChange={onUpload}\r\n        bsSize=\"sm\"\r\n        id=\"scanned\"\r\n        name=\"scanned\"\r\n        type=\"file\"\r\n        multiple\r\n        accept=\"image/*\"\r\n        required={required}\r\n        invalid={uploadInvalid.scanned}\r\n      />\r\n      <FormFeedback>File too large. Maximum is 25mb.</FormFeedback>\r\n      <FormText>MULTIPLE FILES ALLOWED 25mb MAX (PNG, JPG, JPEG ONLY)</FormText>\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default InputFileImage;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { FormGroup, Label, Input, FormFeedback, FormText } from \"reactstrap\";\r\nconst _ = require(\"lodash\");\r\n\r\nconst InputFileDocuments = ({label = 'Attachments'}) => {\r\n  const [uploadInvalid, setUploadInvalid] = useState({\r\n    scanned: false,\r\n    attachments: false,\r\n  });\r\n  const onUpload = (e) => {\r\n    const maxfilesize = 25000000;\r\n    const uploadFile = e.target;\r\n    const inputName = uploadFile.getAttribute(\"name\");\r\n    if (!_.isEmpty(uploadFile.files)) {\r\n      if (uploadFile.files[0].size > maxfilesize) {\r\n        setUploadInvalid({ ...uploadInvalid, [inputName]: true });\r\n      } else {\r\n        setUploadInvalid({ ...uploadInvalid, [inputName]: false });\r\n      }\r\n    } else {\r\n      setUploadInvalid({ ...uploadInvalid, [inputName]: false });\r\n    }\r\n  };\r\n  return (\r\n    <FormGroup>\r\n      <Label for=\"attachments\">{label}</Label>\r\n      <Input\r\n        onChange={onUpload}\r\n        bsSize=\"sm\"\r\n        id=\"attachments\"\r\n        name=\"attachments\"\r\n        type=\"file\"\r\n        multiple\r\n        invalid={uploadInvalid.attachments}\r\n        accept=\".xlsx,.xls,image/*,.doc, .docx,.ppt, .pptx,.txt,.pdf\"\r\n      />\r\n      <FormFeedback>File too large. Maximum is 25mb.</FormFeedback>\r\n      <FormText>\r\n        MULTIPLE FILES ALLOWED 25mb MAX (PDF, DOCX, PPTX, XLSX, JPG, JPEG, PNG\r\n        ONLY)\r\n      </FormText>\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default InputFileDocuments;\r\n","export const getLegendDescription = (legend, text) => {\r\n    switch(legend){\r\n        case 'for_information':\r\n            return 'For your information/file & reference';\r\n        case 'for_review':\r\n            return 'For your review/comments/recommendation/validation';\r\n        case 'draft_reply':\r\n            return 'Draft reply/For your acknowledgement: ' + text;\r\n        case 'rush':\r\n            return 'Rush';\r\n        case 'urgent':\r\n            return 'Urgent';\r\n        case 'for_circulation':\r\n            return 'For circulation & dissemination';\r\n        case 'for_schedule':\r\n            return 'For schedule';\r\n        case 'attend':\r\n            return 'Attend/Represent Me';\r\n        case 'consolidate':\r\n            return text;\r\n        default:\r\n            return 'For your appropriate action'\r\n    }\r\n}","import _, { isEmpty } from \"lodash\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { BsX, BsCheck2 } from \"react-icons/bs\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Accordion,\r\n  AccordionBody,\r\n  AccordionHeader,\r\n  AccordionItem,\r\n} from \"reactstrap\";\r\nimport { IconatedButton, ModalContainer } from \"../../Portal\";\r\nimport { getLegendDescription } from \"./PreviewRoutingLogic\";\r\n\r\nconst PreviewRouting = ({\r\n  previewRouting,\r\n  togglePreview,\r\n  routingData,\r\n  onProceed,\r\n}) => {\r\n  const [open, setOpen] = useState(\"0\");\r\n  const [recipientsArray, setRecipients] = useState([]);\r\n  const { viewCommunicationData } = useSelector((state) => state.tasks);\r\n\r\n  const toggle = (id) => {\r\n    if (open === id) {\r\n      setOpen();\r\n    } else {\r\n      setOpen(id);\r\n    }\r\n  };\r\n\r\n  const recipientLayout = recipientsArray.map((data, index) => {\r\n    return (\r\n      <AccordionItem>\r\n        <AccordionHeader targetId={index}>{data.fullname}</AccordionHeader>\r\n        <AccordionBody accordionId={index}>\r\n          <strong className=\"d-block\">Legends</strong>\r\n          {!_.isEmpty(data.legends) ? (\r\n            <ul>\r\n              {data.legends.map((legend) => {\r\n                const text =\r\n                  legend === \"consolidate\"\r\n                    ? data.consolidate_text\r\n                    : data.draft_reply_text;\r\n                return <li>{getLegendDescription(legend, text)}</li>;\r\n              })}\r\n            </ul>\r\n          ) : (\r\n            <i className=\"text-info\">No checked/selected routing legends.</i>\r\n          )}\r\n\r\n          <strong className=\"d-block\">Remarks</strong>\r\n          {isEmpty(data.remarks) ? (\r\n            <i className=\"text-info\">No remarks.</i>\r\n          ) : (\r\n            <p className=\"ms-3\">{data.remarks}</p>\r\n          )}\r\n        </AccordionBody>\r\n      </AccordionItem>\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    const recipients = routingData.map((r_data) => {\r\n      const recipientsPerRouting = r_data.routing_recipients.map((data) => {\r\n        return {\r\n          fullname: data.user_fullname,\r\n          remarks: r_data.routing_remarks,\r\n          legends: r_data.routing_legend,\r\n          consolidate_text: r_data.consolidate_text,\r\n          draft_reply_text: r_data.draft_reply_text,\r\n        };\r\n      });\r\n\r\n      return recipientsPerRouting;\r\n    });\r\n\r\n    setRecipients(recipients.flat());\r\n  }, [routingData]);\r\n\r\n  return (\r\n    <ModalContainer\r\n      isModalOpen={previewRouting}\r\n      toggleModal={togglePreview}\r\n      title={\"Do you really want to proceed?\"}\r\n      size=\"md\"\r\n    >\r\n      <ModalBody>\r\n        <Container>\r\n          <strong>{`${viewCommunicationData.com_controlNo}`}</strong>\r\n          <p>{viewCommunicationData.com_subject}</p>\r\n          <hr />\r\n          <strong>Recipients</strong>\r\n          <Accordion open={open} toggle={toggle}>\r\n            {recipientLayout}\r\n          </Accordion>\r\n        </Container>\r\n      </ModalBody>\r\n      <ModalFooter>\r\n        <IconatedButton\r\n          name=\"Cancel\"\r\n          color=\"danger\"\r\n          onClick={togglePreview}\r\n          icon={<BsX />}\r\n        />\r\n        <IconatedButton icon={<BsCheck2 />} name=\"Yes\" onClick={onProceed} />\r\n      </ModalFooter>\r\n    </ModalContainer>\r\n  );\r\n};\r\n\r\nexport default PreviewRouting;\r\n","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {BsChevronLeft} from 'react-icons/bs'\r\nimport IconatedButton from '../IconatedButton/IconatedButton'\r\n\r\nconst GobackButton = (props) => {\r\nconst navigate = useNavigate()\r\n\r\n  return (\r\n    <IconatedButton outline  onClick={() => navigate(-1)} icon={<BsChevronLeft />} name=\"Back\" {...props} />\r\n  )\r\n}\r\n\r\nexport default GobackButton"],"names":["apiServer","process","getScanned","scanned","map","scan","src","scan_path","replace","thumbnail","getAttachments","attachments","attach","attach_path","attach_name","useSelector","state","tasks","taskCounter","navigate","useNavigate","dispatch","useDispatch","size","color","name","icon","onClick","decrementTaskCounter","console","log","resetTaskCounter","resetRoutingData","isModalOpen","toggleModal","data","onFormSubmit","e","preventDefault","formData","FormData","target","append","cat_id","category","forEach","value","key","updateCategory","then","getCategories","title","backdrop","onSubmit","for","type","id","required","defaultValue","cat_name","useState","isEditCategoryModalOpen","toggleEditCategoryModal","editCategoryData","setEditCategoryData","classifications","categories","isLoading","columns","selector","row","cell","className","window","confirm","deleteCategory","payload","alert","addCategory","highlightOnHover","pagination","progressPending","progressComponent","isAddCategoryModalOpen","toggleAddCategoryModal","categoryList","cat","index","useEffect","classification","addClassification","getClassifications","outline","min","classificationData","selected","class_id","updateClassification","class_name","class_code","class_due","minLength","_","require","attachmentLinks","href","rel","isEmpty","images","length","style","overflow","height","enableImageSelection","com_id","viewCommunicationData","communication","getCommunication","UrgencyBadge","com_urgency","com_controlNo","com_source_name","com_source_position","com_source_office","com_subject","com_dateCreated","com_other_remarks","employee","com_due_date","isNull","moment","format","emp_firstname","emp_lastname","draftData","socket","office_code","user","isControlNoExist","dueDate","setDueDate","classCode","setClassCode","drafts","newAddedCommunication","userToNotify","isViewCommunicationModalOpen","toggleViewCommunicationModal","classificationList","item","getControlNumber","split_control_no","split","split_series_no","pop","class_series_code","join","series_date","slice","Math","max","control","getSeriesCode","get","set","updateDraft","res","getDrafts","onSaveDraft","document","getElementById","resetViewCommunicationData","resetNewAddedCommunication","md","bsSize","onChange","options","selectedIndex","getAttribute","days","filter","parseInt","add","com_dateReceived","multiple","on","notification","NotificationManager","to","link","setTasks","message","getInbox","props","useLocation","inbox_id","useParams","viewNextTask","incrementTaskCounter","taskComplete","desc","textbox","isLegendContains","isCheck","setCheck","check","checked","disabled","rows","comData","onSaveCommunication","editCommunication","UrgencyOptions","urg","label","username","active","minWidth","closeTab","StyledSelect","styled","Select","showSelectRecipient","setShowSelectRecipient","showUserSearch","setShowUsersSearch","showGroup","setShowGroup","selectedUsers","setSelectedUsers","selectedGroup","setSelectedGroup","routingRecipients","routing","accounts","users","groups","offices","usersUnder","setUsersUnder","usersList","r","includes","user_username","user_id","user_fullname","role_name","role_id","groupsList","group","group_id","group_name","getAccounts","getGroups","getOffices","filterUserByRole","officesUnderAll","officesUnder","office","office_under","usersFilterByOffice","zIndex","isMulti","selectedUsersData","classNamePrefix","setRoutingRecipients","isOpen","setOpen","trail","by","act_id","uploads","viewUploads","getComUploads","signed_attach_id","fontSize","date","errorMessage","document_trail","trails","emp_middlename","trail_description","trail_date","onFilterCom","communications","setIsOpen","startDate","subDays","Date","endDate","setState","filters","setFilter","filterText","setFilterText","toggle","deleteFilter","remove","filtersMap","pointerEvents","editableDateInputs","selection","moveRangeOnFirstSelection","ranges","filterArray","querySelectorAll","formObject","push","start","end","filterComms","com","com_data","control_no","subject","source","encoded_by","date_received","filter_array","operator","column","search_value","toLowerCase","isSameOrBefore","isSameOrAfter","f_item","uploadInvalid","setUploadInvalid","uploadFile","inputName","files","accept","invalid","getLegendDescription","legend","text","previewRouting","togglePreview","routingData","onProceed","open","recipientsArray","setRecipients","recipientLayout","targetId","fullname","accordionId","legends","consolidate_text","draft_reply_text","remarks","recipients","r_data","routing_recipients","routing_remarks","routing_legend","flat"],"sourceRoot":""}