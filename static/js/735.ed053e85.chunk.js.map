{"version":3,"file":"static/js/735.ed053e85.chunk.js","mappings":"4QAqEA,UAxDuB,WACrB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA2BC,EAAAA,EAAAA,MAApBC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,OACVC,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAV,IAA/BH,WACDI,GAAWC,EAAAA,EAAAA,MACjB,GAA4CC,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAyBC,EAAzB,KAEMC,EAAY,mCAAG,WAAOC,GAAP,8EACbC,EAAW,IAAIC,SAASC,SAASC,eAAe,2BAC7CC,IAAI,SAAUhB,GAFJ,SAGDJ,GAASqB,EAAAA,EAAAA,IAAeL,IAHvB,kBAIZM,QAAQC,OAJI,gCAKXvB,GAASwB,EAAAA,EAAAA,IAAarB,IALX,OAMjBM,EAAS,yCANQ,2CAAH,sDAelB,OACE,UAAC,KAAD,CAAWgB,UAAU,YAArB,WACE,SAAC,KAAD,CAAcC,OAAQd,EAAkBe,YAAa,kBAAMd,GAAiBD,EAAvB,EAA0CgB,UAAWd,KAC1G,UAAC,KAAD,CAAMe,SARc,SAACd,GACvBA,EAAEe,iBACFjB,GAAiBD,EAClB,EAKoCmB,GAAG,wBAApC,WACE,8CACA,mBACA,UAAC,KAAD,YACE,UAAC,KAAD,CAAOC,IAAI,eAAX,yCAAqD,iBAAMP,UAAU,cAAhB,mBAErD,SAAC,KAAD,CACEQ,KAAK,WACLC,KAAK,IACLH,GAAG,eACHI,UAAQ,EACRC,KAAK,qBAGT,SAAC,KAAD,KACA,SAAC,KAAD,KACA,iBAAKX,UAAU,iCAAf,WACE,SAAC,KAAD,KACA,SAAC,IAAD,CACEY,KAAK,KACLC,MAAM,UACNF,KAAM/B,GAAa,SAAC,KAAD,CAASiC,MAAM,UAAa,SAC/CL,KAAK,SACLM,MAAM,SAAC,MAAD,cAMjB,C","sources":["Pages/DTS/AddActionTaken/AddActionTaken.jsx"],"sourcesContent":["//Add Edit Action Taken Page\r\nimport React from \"react\";\r\nimport { BackButton, InputFileDocuments, InputFileImage } from \"../../../Layouts/DTS\";\r\nimport { Form, FormGroup, Label, Input, Container, Spinner } from \"reactstrap\";\r\nimport { Confirmation, IconatedButton } from \"../../../Layouts/Portal\";\r\nimport { BsChevronRight } from \"react-icons/bs\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addActionTaken } from \"../../../features/dts/action/actionSlice\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { taskComplete } from \"../../../features/dts/tasks/tasksSlice\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst AddActionTaken = () => {\r\n  const dispatch = useDispatch()\r\n  const {inbox_id, com_id} = useParams()\r\n  const {addLoading} = useSelector(state => state.action)\r\n  const navigate = useNavigate();\r\n  const [confirmationOpen, setConfirmation] = useState(false);\r\n\r\n  const onFormSubmit = async (e) => {\r\n    const formData = new FormData(document.getElementById('add_action_taken_form'))\r\n    formData.set('com_id', com_id)\r\n    const res = await dispatch(addActionTaken(formData))\r\n    if(res.payload.act_id){\r\n      await dispatch(taskComplete(inbox_id));\r\n      navigate('/dts/managementOfCommunications/inbox')\r\n    }\r\n  }\r\n\r\n  const onConfirmSubmit = (e)  => {\r\n    e.preventDefault()\r\n    setConfirmation(!confirmationOpen);\r\n  }\r\n\r\n  return (\r\n    <Container className=\"w-75 mt-3\">\r\n      <Confirmation isOpen={confirmationOpen} toggleModal={() => setConfirmation(!confirmationOpen)} onProceed={onFormSubmit} />\r\n      <Form onSubmit={onConfirmSubmit} id='add_action_taken_form'>\r\n        <h4>Add Action Taken</h4>\r\n        <hr />\r\n        <FormGroup>\r\n          <Label for=\"action_taken\">Description of action taken<span className=\"text-danger\">*</span></Label>\r\n\r\n          <Input\r\n            type=\"textarea\"\r\n            rows=\"6\"\r\n            id=\"action_taken\"\r\n            required\r\n            name=\"action_taken\"\r\n          />\r\n        </FormGroup>\r\n        <InputFileImage />\r\n        <InputFileDocuments />\r\n        <div className=\"d-flex justify-content-between\">\r\n          <BackButton />\r\n          <IconatedButton\r\n            size=\"md\"\r\n            color=\"primary\"\r\n            name={addLoading ? <Spinner color=\"light\" /> : \"Submit\"}\r\n            type=\"submit\"\r\n            icon={<BsChevronRight />}\r\n          />\r\n        </div>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddActionTaken;\r\n"],"names":["dispatch","useDispatch","useParams","inbox_id","com_id","addLoading","useSelector","state","action","navigate","useNavigate","useState","confirmationOpen","setConfirmation","onFormSubmit","e","formData","FormData","document","getElementById","set","addActionTaken","payload","act_id","taskComplete","className","isOpen","toggleModal","onProceed","onSubmit","preventDefault","id","for","type","rows","required","name","size","color","icon"],"sourceRoot":""}