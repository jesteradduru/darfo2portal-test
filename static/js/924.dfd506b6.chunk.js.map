{"version":3,"file":"static/js/924.dfd506b6.chunk.js","mappings":"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","sources":["Pages/DTS/AddRoutingNote/AddRoutingNote.jsx","Pages/DTS/RoutingSlip/RoutingSlip.jsx"],"sourcesContent":["// Add Routing Note Page\r\nimport React, { useEffect } from \"react\";\r\nimport { IconatedButton } from \"../../../Layouts/Portal\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {  BsChevronRight } from \"react-icons/bs\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport RoutingSlip from \"../RoutingSlip/RoutingSlip\";\r\nimport { AddRecipientButton, BackButton, PreviewRouting, RoutingTab } from \"../../../Layouts/DTS\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport '../AddRouting/style.css'\r\nimport { addForRouting, getRoutingSlips } from \"../../../features/dts/routing/routingSlice\";\r\nimport { taskComplete } from \"../../../features/dts/tasks/tasksSlice\";\r\nimport { useState } from \"react\";\r\nconst _ = require(\"lodash\");\r\n\r\nconst AddRoutingNote = ({socket}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const {com_id, inbox_id} = useParams()\r\n  const { routingRecipients } = useSelector((state) => state.routing);\r\n  const { viewCommunicationData } = useSelector((state) => state.tasks);\r\n  const [previewRouting, setPreview] = useState(false);\r\n  const [routingData, setRoutingData] = useState([]);\r\n\r\n  const togglePreview = () => {\r\n    setPreview(!previewRouting)\r\n  }\r\n\r\n  const onPreview = async () => {\r\n\r\n    const routing_slip_array = []\r\n    routingRecipients.forEach(routing => {\r\n\r\n      const form = document.getElementById(`routing_${routing.value}`)\r\n      const formData = new FormData(form);\r\n      const routing_legends = Array.from(form.querySelectorAll('input[type=\"checkbox\"]:checked')).map(data => data.value)\r\n      const formDataObject = {};\r\n      formData.forEach(function (value, key) {\r\n        formDataObject[key] = value;\r\n      });\r\n      formDataObject.routing_legend = routing_legends;\r\n\r\n      formDataObject.routing_recipients = [routing];\r\n      formDataObject.com_id = com_id;\r\n\r\n      if(routing.type === 'group'){\r\n        formDataObject.routing_recipients = routing.recipients;\r\n      }\r\n\r\n      routing_slip_array.push(formDataObject);\r\n    })\r\n\r\n    // console.log(routing_slip_array);\r\n    setRoutingData(routing_slip_array);\r\n    togglePreview();\r\n\r\n    // console.log(JSON.stringify(routing_slip_array))\r\n\r\n    // const routingData = await dispatch(addForRouting(routing_slip_array))\r\n\r\n    // if(routingData.payload.routingData.com_id){\r\n    //   await dispatch(taskComplete(inbox_id))\r\n    //   navigate('/dts/managementOfCommunications/inbox')\r\n    // }\r\n  } \r\n\r\n  const onAddRouting = async () => {\r\n    const res = await dispatch(addForRouting(routingData))\r\n\r\n    if(res.payload.routingData.com_id){\r\n      await dispatch(taskComplete(inbox_id))\r\n      navigate('/dts/managementOfCommunications/inbox')\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if(_.isEmpty(routingRecipients)){\r\n      dispatch(getRoutingSlips({com_id, status: 'initial'}))\r\n    }\r\n  }, [dispatch, com_id]);\r\n\r\n  const routingSlips = routingRecipients.map((recipient) => {\r\n    return (\r\n      <Tab\r\n        eventKey={recipient.value}\r\n        title={<RoutingTab label={recipient.label} username={recipient.value} />}\r\n      >\r\n        <RoutingSlip data={recipient} defaultFrom />\r\n      </Tab> \r\n    );\r\n  });\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"m-3\">\r\n      <PreviewRouting previewRouting={previewRouting} togglePreview={togglePreview} routingData={routingData} onProceed={onAddRouting} />\r\n      <div className=\"d-block d-md-flex mt-3\">\r\n        <h4 className=\"me-3\">Add Routing Note</h4>\r\n        <AddRecipientButton />\r\n      </div>\r\n      <hr />\r\n    \r\n      {/* <Form> */}\r\n        <Tabs>\r\n            {routingSlips}\r\n        </Tabs>\r\n\r\n        {_.isEmpty(routingRecipients) && (\r\n          <p className=\"text-center lead p-3 bg-super-light-green text-secondary mt-3\">\r\n            Add Recipient/s\r\n          </p> \r\n        )}\r\n        \r\n        <div className=\"d-flex justify-content-between\">\r\n          <BackButton />\r\n          <IconatedButton\r\n            size=\"md\"\r\n            color=\"primary\"\r\n            name=\"Submit\"\r\n            onClick={onPreview}\r\n            icon={<BsChevronRight />}\r\n          />\r\n        </div>\r\n      {/* </Form> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddRoutingNote;\r\n","// Routing slip layout\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { Col, Row, FormGroup, Label, Input, Form } from \"reactstrap\";\r\nimport {\r\n  setGroupRecipient,\r\n} from \"../../../features/dts/routing/routingSlice\";\r\nimport { RoutingCheckbox } from \"../../../Layouts/DTS\";\r\nimport { getUser } from \"../../../features/Portal/userSlice\";\r\nimport { getAccounts } from \"../../../features/Portal/accountsSlice\";\r\nimport {useReactToPrint} from \"react-to-print\";\r\nimport { useRef } from \"react\";\r\nimport { IconatedButton } from \"../../../Layouts/Portal\";\r\nimport { BsPrinter } from \"react-icons/bs\";\r\nconst _ = require('lodash')\r\n\r\nconst RoutingSlip = ({ data, viewOnly }) => {\r\n  const { users } = useSelector((state) => state.accounts);\r\n  const { user } = useSelector((state) => state.user);\r\n  const { viewCommunicationData } = useSelector((state) => state.tasks);\r\n  const dispatch = useDispatch();\r\n  const { routingRecipients } = useSelector((state) => state.routing);\r\n  const { tasks, taskCounter } = useSelector((state) => state.tasks);\r\n  const printHtml = useRef();\r\n  const handlePrintRouting = useReactToPrint({\r\n    content: () => printHtml.current,\r\n    documentTitle:'routing_slip',\r\n    pageStyle:'print'\r\n  })\r\n\r\n  const groupList = users\r\n    .filter((user) => user.group_id === data.value)\r\n    .map((user) => {\r\n      return {\r\n        value: user.user_username,\r\n        label: `${user.emp_firstname}  ${user.emp_lastname} - ${user.office_code}`,\r\n        user_id: user.user_id,\r\n        user_username: user.user_username,\r\n        user_fullname: `${user.emp_firstname}  ${user.emp_lastname} - ${user.office_code}`,\r\n        role_name: user.role_name,\r\n        role_id: user.role_id,\r\n      };\r\n    });\r\n\r\n  const onChangeGroupRecipient = (selectedUsers) => {\r\n    // setGroupRecipients(selectedUsers);\r\n    dispatch(\r\n      setGroupRecipient({ group_id: data.value, recipients: selectedUsers })\r\n    );\r\n    // console.log(selectedUsers);\r\n  };\r\n\r\n  const routingFrom = () => {\r\n    if(!_.isEmpty(users)){\r\n      if(user.role_name.includes('Process-level') && !viewOnly){\r\n        const pl_approver = users.filter(item => item.role_name === 'Process-level Approver')[0]\r\n        return `${pl_approver.emp_firstname} ${pl_approver.emp_middlename[0]}. ${pl_approver.emp_lastname} - ${pl_approver.emp_position}`; \r\n      }else if(viewOnly){\r\n        const from = users.filter(item => item.user_id === data.routing_from)[0]\r\n        return `${from.emp_firstname} ${from.emp_middlename[0]}. ${from.emp_lastname} - ${from.emp_position}`;\r\n      }else{\r\n        return `${user.emp_firstname} ${user.emp_middlename[0]}. ${user.emp_lastname} - ${user.emp_position}`;\r\n      }\r\n    }\r\n  };\r\n\r\n  const routingData = routingRecipients.filter((r) => r.value === data.value);\r\n\r\n  // const usersList = users\r\n  //   .filter(\r\n  //     (user) =>\r\n  //       !routingRecipients.map((r) => r.value).includes(user.user_username)\r\n  //   )\r\n  //   .map((user) => {\r\n  //     return {\r\n  //       value: user.user_username,\r\n  //       label: `${user.emp_firstname}  ${user.emp_lastname} - ${user.office_code}`,\r\n  //       type: \"user\",\r\n  //     };\r\n  //   });\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setGroupRecipient({ group_id: data.value, recipients: groupList })\r\n    );\r\n    dispatch(getAccounts())\r\n    dispatch(getUser())\r\n\r\n  }, [dispatch]);\r\n\r\n\r\n  const isLegendContains = (legend) => {\r\n    if(data.routing_legend){\r\n      return data.routing_legend.includes(legend)\r\n    }\r\n  }\r\n\r\n  const showToTask = (task) => {\r\n    const allowedTask = ['viewRouting', 'addRoutingNote', 'forRouting', 'routeCommunication']\r\n    return allowedTask.includes(task);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <IconatedButton\r\n        name='Print Routing'\r\n        outline\r\n        icon={<BsPrinter />}\r\n        className=\"ms-auto d-block my-2 d-print-none\"\r\n        onClick={handlePrintRouting}\r\n      />\r\n    <Form\r\n      id={`routing_${data.value}`}\r\n      ref={printHtml}\r\n      className=\"p-md-4 p-1 rounded bg-super-light-green m-md-2 routing_slip_form\"\r\n      style={{pointerEvents: viewOnly ? 'none' : ''}}\r\n    >\r\n      <FormGroup>\r\n        <Label for={`reference_no`}>Reference No.</Label>\r\n        <Input\r\n          type=\"text\"\r\n          id={`reference_no`}\r\n          name=\"reference_no\"\r\n          size=\"sm\"\r\n          defaultValue={data.routing_referenceNo ? data.routing_referenceNo : `139-9-${viewCommunicationData.class_code}-` }\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for={`routing_from`}>From</Label>\r\n        <Input\r\n          type=\"text\"\r\n          id={`routing_from`}\r\n          defaultValue={routingFrom()}\r\n          name=\"routing_from\"\r\n          size=\"sm\"\r\n        />\r\n      </FormGroup>\r\n      {data.type === \"group\" ? (\r\n        <FormGroup>\r\n          <Label for=\"routing_to\">To</Label>\r\n          <Select\r\n            options={groupList}\r\n            isMulti\r\n            defaultValue={groupList}\r\n            className=\"basic-multi-select\"\r\n            classNamePrefix=\"select\"\r\n            onChange={onChangeGroupRecipient}\r\n          />\r\n        </FormGroup>\r\n      ) : (\r\n        <FormGroup>\r\n          <Label for=\"routing_to\">To</Label>\r\n          <Select\r\n            options={routingData}\r\n            defaultValue={!data.routing_to ? routingData : [{label: data.label}]}\r\n            classNamePrefix=\"select\"\r\n          />\r\n        </FormGroup>\r\n      )}\r\n\r\n      <Row style={{wordWrap: 'break-word'}}>\r\n        <Col md='6'>\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`for_action_${data.value}`}\r\n            value={`for_action`}\r\n            desc=\"For your appropriate action\"\r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`for_information_${data.value}`}\r\n            value={`for_information`}\r\n            desc=\"For your information/file & reference\"\r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`for_review_${data.value}`}\r\n            value={`for_review`}\r\n            desc=\"For your review/ comments/ recommendation/ validation\"\r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`draft_reply_${data.value}`}\r\n            value={`draft_reply`}\r\n            desc=\"Draft reply/For your acknowledgement\"\r\n            defaultValue={data.routing_draftReply}\r\n            textbox\r\n            isLegendContains={isLegendContains}\r\n          />\r\n        </Col>\r\n        <Col md='6'>\r\n          <RoutingCheckbox \r\n            name=\"routing_legend\" \r\n            id={`rush_${data.value}`} \r\n            value={`rush`} \r\n            desc=\"Rush\" \r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox \r\n            name=\"routing_legend\" \r\n            id={`urgent_${data.value}`} \r\n            value={`urgent`} \r\n            desc=\"Urgent\" \r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`for_circulation_${data.value}`}\r\n            value={`for_circulation`}\r\n            desc=\"For circulation & dissemination\"\r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`for_schedule_${data.value}`}\r\n            value='for_schedule'\r\n            desc=\"For schedule\"\r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`attend_${data.value}`}\r\n            value={`attend`}\r\n            desc=\"Attend/Represent Me\"\r\n            isLegendContains={isLegendContains}\r\n          />\r\n          <RoutingCheckbox\r\n            name=\"routing_legend\"\r\n            id={`consolidate_${data.value}`}\r\n            value={`consolidate`}\r\n            textbox\r\n            defaultValue={isLegendContains('consolidate') ? data.routing_consolidate : \"\\nPlease consolidate & submit to my office on or before\\n\"}\r\n            isLegendContains={isLegendContains}\r\n          />\r\n        </Col>\r\n        {(viewCommunicationData.com_urgency === \"Rush\" || showToTask(tasks[taskCounter])  ) && (\r\n          <Col md=\"12\">\r\n            <FormGroup>\r\n              <Label for={`routing_remarks`}>Remarks</Label>\r\n              <Input\r\n                defaultValue={data.routing_remarks}\r\n                type=\"textarea\"\r\n                id={`routing_remarks_${data.value}`}\r\n                name=\"routing_remarks\"\r\n                size=\"sm\"\r\n                rows=\"5\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoutingSlip;\r\n"],"names":["_","require","socket","navigate","useNavigate","dispatch","useDispatch","useParams","com_id","inbox_id","routingRecipients","useSelector","state","routing","tasks","viewCommunicationData","useState","previewRouting","setPreview","routingData","setRoutingData","togglePreview","onPreview","routing_slip_array","forEach","form","document","getElementById","value","formData","FormData","routing_legends","Array","from","querySelectorAll","map","data","formDataObject","key","routing_legend","routing_recipients","type","recipients","push","onAddRouting","addForRouting","payload","taskComplete","useEffect","isEmpty","getRoutingSlips","status","routingSlips","recipient","eventKey","title","label","username","defaultFrom","className","onProceed","size","color","name","onClick","icon","viewOnly","users","accounts","user","taskCounter","printHtml","useRef","handlePrintRouting","useReactToPrint","content","current","documentTitle","pageStyle","groupList","filter","group_id","user_username","emp_firstname","emp_lastname","office_code","user_id","user_fullname","role_name","role_id","r","setGroupRecipient","getAccounts","getUser","task","isLegendContains","legend","includes","outline","id","ref","style","pointerEvents","for","defaultValue","routing_referenceNo","class_code","pl_approver","item","emp_middlename","emp_position","routing_from","routingFrom","options","isMulti","classNamePrefix","onChange","selectedUsers","routing_to","wordWrap","md","desc","routing_draftReply","textbox","routing_consolidate","com_urgency","routing_remarks","rows"],"sourceRoot":""}