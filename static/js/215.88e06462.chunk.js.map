{"version":3,"file":"static/js/215.88e06462.chunk.js","mappings":"wSAsLA,EAjLqB,SAAC,GAQf,IAPLA,EAOI,EAPJA,SACAC,EAMI,EANJA,iBACAC,EAKI,EALJA,cACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,aACAC,EACI,EADJA,WAGMC,GADsBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,eAAjB,IAAhCA,gBACmCC,KAAI,SAACC,EAAMC,GACpD,OACE,oBACEC,MAAOF,EAAKG,WADd,UAIGH,EAAKI,WAJR,MAIuBJ,EAAKK,WAFrBJ,EAKV,IAKKK,EAAe,SAACC,GACpB,IAAMC,EAAWD,EAAEE,OACnB,GAAsB,eAAnBD,EAASN,QAA+C,IAArBM,EAASE,QAC7C,OAAOlB,EAAU,CACf,aAAc,iBAAkB,SAAU,UAAW,cAAe,gBAAiB,iBAAkB,eAAgB,WAErH,GAAsB,eAAnBgB,EAASN,MAChB,OAAOV,EAAU,IAGnB,IAAyB,IAArBgB,EAASE,QACXlB,EAAU,GAAD,eAAKD,GAAL,CAAmBgB,EAAEE,OAAOP,aAChC,CACL,IAAMS,EAAepB,EAAaqB,QAAO,SAACC,GACxC,OAAOA,IAAUN,EAAEE,OAAOP,KAC3B,IACDV,EAAUmB,EACX,CACF,EACD,OACE,iCACE,SAAC,KAAD,CAAOG,IAAI,eAAX,0BACA,0BACE,UAAC,KAAD,CAAWC,OAAK,EAACC,QAAM,EAAvB,WACE,SAAC,KAAD,CAAOC,KAAK,QAAQC,GAAG,aAAaC,KAAK,cAAcC,SAAU,SAACb,GAAD,OAAOnB,EAASmB,EAAEE,OAAOP,MAAzB,EAAiCmB,gBAAc,KAChH,SAAC,KAAD,CAAOP,IAAI,aAAX,8BAOJ,SAAC,KAAD,WACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,yCACA,UAAC,KAAD,CAAOG,KAAK,SAASG,SAvCP,SAACb,GACvBd,EAAac,EAAEE,OAAOP,MACvB,EAqCS,WACE,mBAAQA,MAAM,GAAd,kBACCP,SAGL,UAAC,KAAD,uBAAe,iBAAM2B,UAAU,cAAhB,mBACf,UAAC,KAAD,YACE,UAAC,KAAD,YACE,UAAC,KAAD,CAAWP,OAAK,EAAhB,WACE,SAAC,KAAD,CACEE,KAAK,WACLf,MAAM,aACNkB,SAAUd,KAEZ,SAAC,KAAD,CAAOS,OAAK,EAAZ,4BAEF,UAAC,KAAD,CAAWA,OAAK,EAAhB,WACE,SAAC,KAAD,CACEE,KAAK,WACLf,MAAM,aACNkB,SAAUd,EACVI,QAASnB,EAAagC,SAAS,iBAEjC,SAAC,KAAD,CAAOR,OAAK,EAAZ,4BAEF,UAAC,KAAD,CAAWA,OAAK,EAAhB,WACE,SAAC,KAAD,CACEE,KAAK,WACLf,MAAM,iBACNkB,SAAUd,EACVI,QAASnB,EAAagC,SAAS,qBAEjC,SAAC,KAAD,CAAOR,OAAK,EAAZ,gCAEF,UAAC,KAAD,CAAWA,OAAK,EAAhB,WACE,SAAC,KAAD,CACEE,KAAK,WACLf,MAAM,SACNkB,SAAUd,EACVI,QAASnB,EAAagC,SAAS,aAEjC,SAAC,KAAD,CAAOR,OAAK,EAAZ,wBAEF,UAAC,KAAD,CAAWA,OAAK,EAAhB,WACE,SAAC,KAAD,CACEE,KAAK,WACLf,MAAM,UACNkB,SAAUd,EACVI,QAASnB,EAAagC,SAAS,cAEjC,SAAC,KAAD,CAAOR,OAAK,EAAZ,4BAGJ,UAAC,KAAD,YACE,UAAC,KAAD,CAAWA,OAAK,EAAhB,WACE,SAAC,KAAD,CACEE,KAAK,WACLf,MAAM,cACNkB,SAAUd,EACVI,QAASnB,EAAagC,SAAS,kBAEjC,SAAC,KAAD,CAAOR,OAAK,EAAZ,6BAEF,UAAC,KAAD,CAAWA,OAAK,EAAhB,WACE,SAAC,KAAD,CACEE,KAAK,WACLf,MAAM,gBACNkB,SAAUd,EACVI,QAASnB,EAAagC,SAAS,oBAEjC,SAAC,KAAD,CAAOR,OAAK,EAAZ,+BAEF,UAAC,KAAD,CAAWA,OAAK,EAAhB,WACE,SAAC,KAAD,CACEE,KAAK,WACLf,MAAM,iBACNkB,SAAUd,EACVI,QAASnB,EAAagC,SAAS,qBAEjC,SAAC,KAAD,CAAOR,OAAK,EAAZ,gCAEF,UAAC,KAAD,CAAWA,OAAK,EAAhB,WACE,SAAC,KAAD,CACEE,KAAK,WACLf,MAAM,eACNkB,SAAUd,EACVI,QAASnB,EAAagC,SAAS,mBAEjC,SAAC,KAAD,CAAOR,OAAK,EAAZ,8BAEF,UAAC,KAAD,CAAWA,OAAK,EAAhB,WACE,SAAC,KAAD,CACEE,KAAK,WACLf,MAAM,SACNkB,SAAUd,EACVI,QAASnB,EAAagC,SAAS,aAEjC,SAAC,KAAD,CAAOR,OAAK,EAAZ,mCAMV,UAAC,KAAD,CAAWO,UAAU,qBAArB,WACE,SAAC,KAAD,CAAOR,IAAI,oBAAX,yBACA,SAAC,KAAD,CACEU,oBAAoB,EACpBJ,SAAU,SAACpB,GAAD,OAAUX,EAAiB,CAACW,EAAKyB,WAAjC,EACVC,2BAA2B,EAC3BC,OAAQrC,QAGZ,SAAC,KAAD,CAAQsC,MAAM,UAAUN,UAAU,kBAAkBO,QAASnC,EAA7D,+BAGL,E,kDCvKKoC,EAAIC,EAAQ,KAkNlB,EAhNgB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA+BtC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMuC,OAAjB,IAAnCA,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UACjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkB9C,EAAlB,KACA,GAAoC6C,EAAAA,EAAAA,UAAS,IAA7C,eAAOE,EAAP,KAAmBC,EAAnB,KACA,GAAkCH,EAAAA,EAAAA,UAAS,IAA3C,eAAO/C,EAAP,KAAqBC,EAArB,KACA,GAA0B8C,EAAAA,EAAAA,UAAS,CACjC,CACEI,UAAW,IAAIC,KACfC,QAAS,IAAID,KACbE,IAAK,eAJT,eAAOhD,EAAP,KAAciD,EAAd,KAQMC,EAAU,CACd,CACE5B,KAAM,aACN6B,SAAU,gBACVC,UAAU,EACVJ,IAAK,aACLK,MAAO3D,EAAagC,SAAS,cAC7B4B,MAAM,GAER,CACEhC,KAAM,iBACNiC,KAAM,SAACC,GAAD,gBAAYA,EAAIjD,WAAhB,YAA8BiD,EAAIhD,SAAlC,EACN6C,MAAO3D,EAAagC,SAAS,kBAC7BsB,IAAK,kBAEP,CACE1B,KAAM,kCACNiC,KAAM,SAACC,GAAD,gBACDA,EAAIC,gBADH,aACuBD,EAAIE,oBAD3B,aACmDF,EAAIG,kBADvD,EAENN,MAAO3D,EAAagC,SAAS,UAC7BsB,IAAK,UAEP,CACE1B,KAAM,UACN6B,SAAU,cACVE,MAAO3D,EAAagC,SAAS,WAC7BsB,IAAK,UACLM,MAAM,GAER,CACEhC,KAAM,cACN+B,MAAO3D,EAAagC,SAAS,eAC7B6B,KAAM,SAACC,GACL,IAAII,EAAU,GAERC,EAASL,EAAIM,YAAY5D,KAAI,SAAC6D,GAClC,OAAIH,EAAQlC,SAASqC,EAAGC,WAAaD,EAAGE,UAAUvC,SAAS,aAAeqC,EAAGG,eAAexC,SAAS,eACnGkC,EAAQO,KAAKJ,EAAGC,WACT,wBAAKD,EAAGC,aAER,uBAEV,IAED,OAAO,eAAII,MAAO,CAAEC,QAAS,KAAtB,SAA8BR,GACtC,EACDb,IAAK,eAEP,CACE1B,KAAM,6BACN6B,SAAU,mBACVI,KAAM,SAACC,GAAD,OAASc,IAAOd,EAAIe,kBAAkBC,OAAO,aAA7C,EACNpB,UAAU,EACVC,MAAO3D,EAAagC,SAAS,iBAC7BsB,IAAK,iBAEP,CACE1B,KAAM,SACNiC,KAAM,SAACC,GACL,IAAMiB,EAA0BjB,EAAIkB,aAAa3D,QAAO,SAAA4D,GACtD,MAA0B,eAAnBA,EAAIC,UACZ,IACKC,EAAuBrB,EAAIkB,aAAa3D,QAAO,SAAA4D,GACnD,MAA0B,aAAnBA,EAAIC,UACZ,IACD,OAAI3C,EAAE6C,QAAQL,GAEJxC,EAAE6C,QAAQD,GAGX,iBAFA,WAFA,qBAMV,EACDzB,UAAU,EACVC,MAAO3D,EAAagC,SAAS,UAC7BsB,IAAK,UAEP,CACE1B,KAAM,iBACN+B,MAAO3D,EAAagC,SAAS,kBAC7B6B,KAAM,SAACC,GAEL,GAAGvB,EAAE6C,QAAQtB,EAAIuB,gBACf,MAAO,GAET,IAAMC,EAAcxB,EAAIuB,eAAehE,QAAO,SAAA4D,GAAG,OAAIA,EAAIT,eAAexC,SAAS,aAAhC,IAA+CxB,KAAI,SAAAyE,GAClG,IAAMM,EAAa,CAAC,QAMpB,OALIN,EAAIT,eAAexC,SAAS,QAC9BuD,EAAWd,KAAK,QACPQ,EAAIT,eAAexC,SAAS,WACrCuD,EAAWd,KAAK,WAEX,wBAAKc,EAAWC,KAAK,KAAhB,WAA2BP,EAAIQ,kBAC5C,IAED,OACE,wBAAKH,GAER,EACDhC,IAAK,kBAEP,CACE1B,KAAM,eACN+B,MAAO3D,EAAagC,SAAS,gBAC7B6B,KAAM,SAACC,GACL,IAAMkB,EAAelB,EAAIkB,aAAaxE,KAAI,SAACyE,GACzC,OAAO,wBAAKA,EAAIS,WACjB,IAED,OAAO,eAAIhB,MAAO,CAAEC,QAAS,KAAtB,SAA8BK,GACtC,EACD1B,IAAK,iBAKHqC,EAAmBnC,EAAQnC,QAAO,SAAAuE,GACtC,OAAO5F,EAAagC,SAAS4D,EAAItC,IAClC,IAEKnD,EAAU,mCAAG,uFACboC,EAAE6C,QAAQpF,GADG,gCAETyC,GAASoD,EAAAA,EAAAA,OAFA,OAGTC,EAAejD,EAAQxB,QAAO,SAAC0E,GACnC,IAAMC,EAAQpB,IAAOtE,EAAM,GAAG6C,WAAW2B,OAAO,cAC1CmB,EAAMrB,IAAOtE,EAAM,GAAG+C,SAASyB,OAAO,cAC5C,OACEF,IAAOoB,GAAOE,eAAeH,EAAIlB,mBACjCD,IAAOqB,GAAKE,cAAcJ,EAAIlB,mBAC9BkB,EAAIK,cAAcpE,SAASgB,EAE9B,IACDE,EAAc4C,GAZC,sBAcf5C,EAAc,IAdC,2CAAH,qDAkChB,OAhBAmD,EAAAA,EAAAA,YAAU,WACR,IAAI9D,EAAE+D,YAAY3D,GAAS,CACzB,IAAMmD,EAAejD,EAAQxB,QAAO,SAAC0E,GACnC,OAAOpD,EAAQX,SAAS+D,EAAIQ,SAAwB,QAAZ5D,GAAqBJ,EAAE6C,QAAQW,EAAIf,aAC5E,IACD/E,EAAU,CACR,aAAc,iBAAkB,SAAU,UAAW,cAAe,gBAAiB,iBAAkB,eAAgB,WAEzHiD,EAAc4C,EACf,CACF,GAAE,KAEHO,EAAAA,EAAAA,YAAU,WACR5D,GAAS+D,EAAAA,EAAAA,MACV,GAAE,KAGD,UAAC,KAAD,CAAWC,OAAK,EAAC1E,UAAU,OAA3B,WACE,qCACA,UAAC,KAAD,YACE,SAAC,KAAD,CAAK2E,GAAG,IAAR,UACE,SAAC,EAAD,CACE3G,cAAeO,EACfR,iBAAkByD,EAClBvD,aAAcA,EACdC,UAAWA,EACXC,aAAcA,EACdC,WAAYA,OAGhB,SAAC,KAAD,CAAKuG,GAAG,IAAR,UACE,gBAAK3E,UAAU,aAAf,UACE,SAAC,IAAD,CACE4E,KAAM1D,EACN5B,QAAQ,EACRmC,QAASmC,EACTiB,eAAe,EACfC,SAAQ,qBAAgBjC,MAASE,UALnC,UAOE,SAAC,KAAD,CACE6B,KAAM1D,EACNO,QAASA,EACTsD,YAAU,EACVC,gBAAiBjE,EACjBkE,mBAAmB,SAAC,KAAD,IACnBC,kBAAgB,eAQ/B,C","sources":["Pages/DTS/Reports/ReportFilter.jsx","Pages/DTS/Reports/Reports.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Input, FormGroup, Label, Card, CardBody, Row, Col, Button } from \"reactstrap\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ReportFilter = ({\r\n  setTitle,\r\n  setCalendarState,\r\n  calendarState,\r\n  reportFields,\r\n  setFields,\r\n  setClassCode,\r\n  loadReport\r\n}) => {\r\n  const { classifications } = useSelector((state) => state.classifications);\r\n  const classificationList = classifications.map((item, index) => {\r\n    return (\r\n      <option\r\n        value={item.class_code}\r\n        key={index}\r\n      >\r\n        {item.class_name} - {item.cat_name}\r\n      </option>\r\n    );\r\n  });\r\n\r\n  const onFilterByClass = (e) => {\r\n    setClassCode(e.target.value)\r\n  }\r\n  const onCheckField = (e) => {\r\n    const checkBox = e.target;\r\n    if(checkBox.value === 'select_all' && checkBox.checked === true){\r\n      return setFields([\r\n        'control_no', 'classification', 'source', 'subject', 'referred_to', 'date_received', 'action_desired', 'action_taken', 'status'\r\n      ]);\r\n    }else if(checkBox.value === 'select_all'){\r\n      return setFields([]);\r\n    }\r\n\r\n    if (checkBox.checked === true) {\r\n      setFields([...reportFields, e.target.value]);\r\n    } else {\r\n      const updateFields = reportFields.filter((field) => {\r\n        return field !== e.target.value;\r\n      });\r\n      setFields(updateFields);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Label for=\"report_title\">Report Type</Label>\r\n      <div>\r\n        <FormGroup check inline>\r\n          <Input type=\"radio\" id='monitoring' name='report_type' onChange={(e) => setTitle(e.target.value)} defaultChecked />\r\n          <Label for=\"monitoring\">Monitoring</Label>\r\n        </FormGroup>\r\n        {/* <FormGroup check inline>\r\n          <Input type=\"radio\" id='logs' name='report_type'  onChange={(e) => setTitle(e.target.value)} />\r\n          <Label for=\"logs\">Communication Logs</Label>\r\n        </FormGroup> */}\r\n      </div>\r\n      <Card>\r\n        <CardBody>\r\n          <FormGroup>\r\n            <Label>Filter by classification:</Label>\r\n            <Input type='select' onChange={onFilterByClass}>\r\n              <option value=\"\">None</option>\r\n              {classificationList}\r\n            </Input>\r\n          </FormGroup>\r\n          <Label>Fields: <span className=\"text-danger\">*</span></Label>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  value=\"select_all\"\r\n                  onChange={onCheckField}\r\n                />\r\n                <Label check>Select All</Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  value=\"control_no\"\r\n                  onChange={onCheckField}\r\n                  checked={reportFields.includes(\"control_no\")}\r\n                />\r\n                <Label check>Control No</Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  value=\"classification\"\r\n                  onChange={onCheckField}\r\n                  checked={reportFields.includes(\"classification\")}\r\n                />\r\n                <Label check>Classification</Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  value=\"source\"\r\n                  onChange={onCheckField}\r\n                  checked={reportFields.includes(\"source\")}\r\n                />\r\n                <Label check>Source</Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  value=\"subject\"\r\n                  onChange={onCheckField}\r\n                  checked={reportFields.includes(\"subject\")}\r\n                />\r\n                <Label check>Subject</Label>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  value=\"referred_to\"\r\n                  onChange={onCheckField}\r\n                  checked={reportFields.includes(\"referred_to\")}\r\n                />\r\n                <Label check>Referred To</Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  value=\"date_received\"\r\n                  onChange={onCheckField}\r\n                  checked={reportFields.includes(\"date_received\")}\r\n                />\r\n                <Label check>Date Received</Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  value=\"action_desired\"\r\n                  onChange={onCheckField}\r\n                  checked={reportFields.includes(\"action_desired\")}\r\n                />\r\n                <Label check>Action Desired</Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  value=\"action_taken\"\r\n                  onChange={onCheckField}\r\n                  checked={reportFields.includes(\"action_taken\")}\r\n                />\r\n                <Label check>Action Taken</Label>\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  value=\"status\"\r\n                  onChange={onCheckField}\r\n                  checked={reportFields.includes(\"status\")}\r\n                />\r\n                <Label check>Status</Label>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n      <FormGroup className=\"d-flex flex-column\">\r\n        <Label for=\"report_date_range\">Date Range</Label>\r\n        <DateRange\r\n          editableDateInputs={true}\r\n          onChange={(item) => setCalendarState([item.selection])}\r\n          moveRangeOnFirstSelection={false}\r\n          ranges={calendarState}\r\n        />\r\n      </FormGroup>\r\n      <Button color=\"success\" className=\"mx-auto d-block\" onClick={loadReport}>Generate Report</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReportFilter;\r\n","// Reports Page`\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Col, Container, Row, Spinner } from \"reactstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getReport } from \"../../../features/dts/reports/reportSlice\";\r\nimport moment from \"moment\";\r\nimport ReportFilter from \"./ReportFilter\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport DataTableExtensions from \"react-data-table-component-extensions\";\r\nimport \"react-data-table-component-extensions/dist/index.css\";\r\nimport { getClassifications } from \"../../../features/dts/classifications/classifications\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst _ = require('lodash')\r\n\r\nconst Reports = () => {\r\n  const dispatch = useDispatch();\r\n  const {com_ids} = useParams();\r\n  const { reports, isLoading } = useSelector((state) => state.reports);\r\n  const [classCode, setClassCode] = useState(\"\");\r\n  const [reportData, setReportData] = useState([])\r\n  const [reportFields, setFields] = useState([]);\r\n  const [state, setState] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"CONTROL NO\",\r\n      selector: \"com_controlNo\",\r\n      sortable: true,\r\n      key: 'control_no',\r\n      omit: !reportFields.includes(\"control_no\"),\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"CLASSIFICATION\",\r\n      cell: (row) => `${row.class_name} ${row.cat_name}`,\r\n      omit: !reportFields.includes(\"classification\"),\r\n      key: 'classification',\r\n    },\r\n    {\r\n      name: \"SOURCE (NAME, POSITION, OFFICE)\",\r\n      cell: (row) =>\r\n        `${row.com_source_name}, ${row.com_source_position}, ${row.com_source_office}`,\r\n      omit: !reportFields.includes(\"source\"),\r\n      key: 'source'\r\n    },\r\n    {\r\n      name: \"SUBJECT\",\r\n      selector: \"com_subject\",\r\n      omit: !reportFields.includes(\"subject\"),\r\n      key: 'subject',\r\n      wrap: true\r\n    },\r\n    {\r\n      name: \"REFFERED TO\",\r\n      omit: !reportFields.includes('referred_to'),\r\n      cell: (row) => {\r\n        let persons = [];\r\n\r\n        const person = row.referred_to.map((to) => {\r\n          if(!persons.includes(to.fullname) && to.role_name.includes('Approver') && to.routing_legend.includes('for_action')){\r\n            persons.push(to.fullname);\r\n            return <li>{to.fullname}</li>;\r\n          }else{\r\n            return <></>\r\n          }\r\n        });\r\n\r\n        return <ul style={{ padding: \"0\" }}>{person}</ul>;\r\n      },\r\n      key: 'referred_to'\r\n    },\r\n    {\r\n      name: \"DATE RECEIVED (DD-MM-YYYY)\",\r\n      selector: \"com_dateReceived\",\r\n      cell: (row) => moment(row.com_dateReceived).format(\"DD-MM-YYYY\"),\r\n      sortable: true,\r\n      omit: !reportFields.includes('date_received'),\r\n      key: 'date_received'\r\n    },\r\n    {\r\n      name: \"STATUS\",\r\n      cell: (row) => {\r\n        const actionTakenForApproval =  row.action_taken.filter(act => {\r\n          return act.act_status === 'for_review';\r\n        })\r\n        const actionTakenApproved =  row.action_taken.filter(act => {\r\n          return act.act_status === 'approved';\r\n        })\r\n        if(!_.isEmpty(actionTakenForApproval)){\r\n          return 'Action for approval'\r\n        }else if(!_.isEmpty(actionTakenApproved)){\r\n          return 'Complied'\r\n        }else{\r\n          return 'Pending Action';\r\n        }\r\n      },\r\n      sortable: true,\r\n      omit: !reportFields.includes('status'),\r\n      key: 'status'\r\n    },\r\n    {\r\n      name: \"ACTION DESIRED\",\r\n      omit: !reportFields.includes('action_desired'),\r\n      cell: (row) => {\r\n        \r\n        if(_.isEmpty(row.action_desired)){\r\n          return ''\r\n        }\r\n        const actDesired1 = row.action_desired.filter(act => act.routing_legend.includes('for_action')).map(act => {\r\n          const actDesired = [\"FYAA\"];\r\n          if (act.routing_legend.includes(\"rush\")) {\r\n            actDesired.push(\"Rush\");\r\n          } else if (act.routing_legend.includes(\"urgent\")) {\r\n            actDesired.push(\"Urgent\");\r\n          }\r\n          return <li>{actDesired.join('/') + `/${act.routing_remarks}`}</li>\r\n        })\r\n        \r\n        return (\r\n          <ul>{actDesired1}</ul>\r\n        );\r\n      },\r\n      key: 'action_desired'\r\n    },\r\n    {\r\n      name: \"ACTION TAKEN\",\r\n      omit: !reportFields.includes('action_taken'),\r\n      cell: (row) => {\r\n        const action_taken = row.action_taken.map((act) => {\r\n          return <li>{act.act_taken}</li>;\r\n        });\r\n\r\n        return <ul style={{ padding: \"0\" }}>{action_taken}</ul>;\r\n      },\r\n      key: 'action_taken'\r\n    },\r\n  ];\r\n  \r\n\r\n  const columnsForExport = columns.filter(col => {\r\n    return reportFields.includes(col.key)\r\n  })\r\n\r\n  const loadReport = async () => {\r\n    if(!_.isEmpty(reportFields)){\r\n      await dispatch(getReport())\r\n      const filteredData = reports.filter((rep) => {\r\n        const start = moment(state[0].startDate).format(\"MM-DD-YYYY\");\r\n        const end = moment(state[0].endDate).format(\"MM-DD-YYYY\");\r\n        return (\r\n          moment(start).isSameOrBefore(rep.com_dateReceived) &&\r\n          moment(end).isSameOrAfter(rep.com_dateReceived) && \r\n          rep.com_controlNo.includes(classCode)\r\n        );\r\n      });\r\n      setReportData(filteredData);\r\n    }else{\r\n      setReportData([]);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!_.isUndefined(com_ids)){\r\n      const filteredData = reports.filter((rep) => {\r\n        return com_ids.includes(rep.com_id) || (com_ids === 'all' && _.isEmpty(rep.action_taken))\r\n      });\r\n      setFields([\r\n        'control_no', 'classification', 'source', 'subject', 'referred_to', 'date_received', 'action_desired', 'action_taken', 'status'\r\n      ])\r\n      setReportData(filteredData);\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    dispatch(getClassifications())\r\n  }, [])\r\n\r\n  return (\r\n    <Container fluid className=\"mt-3\">\r\n      <h3>Reports</h3>\r\n      <Row>\r\n        <Col md=\"3\">\r\n          <ReportFilter\r\n            calendarState={state}\r\n            setCalendarState={setState}\r\n            reportFields={reportFields}\r\n            setFields={setFields}\r\n            setClassCode={setClassCode}\r\n            loadReport={loadReport}\r\n          />\r\n        </Col>\r\n        <Col md=\"9\">\r\n          <div className=\"p-2 shadow\">\r\n            <DataTableExtensions\r\n              data={reportData}\r\n              filter={false}\r\n              columns={columnsForExport}\r\n              exportHeaders={true}\r\n              fileName={`dts_report_${moment().format()}`}\r\n            >\r\n              <DataTable\r\n                data={reportData}\r\n                columns={columns}\r\n                pagination\r\n                progressPending={isLoading}\r\n                progressComponent={<Spinner />}\r\n                persistTableHead\r\n              />\r\n            </DataTableExtensions>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n"],"names":["setTitle","setCalendarState","calendarState","reportFields","setFields","setClassCode","loadReport","classificationList","useSelector","state","classifications","map","item","index","value","class_code","class_name","cat_name","onCheckField","e","checkBox","target","checked","updateFields","filter","field","for","check","inline","type","id","name","onChange","defaultChecked","className","includes","editableDateInputs","selection","moveRangeOnFirstSelection","ranges","color","onClick","_","require","dispatch","useDispatch","com_ids","useParams","reports","isLoading","useState","classCode","reportData","setReportData","startDate","Date","endDate","key","setState","columns","selector","sortable","omit","wrap","cell","row","com_source_name","com_source_position","com_source_office","persons","person","referred_to","to","fullname","role_name","routing_legend","push","style","padding","moment","com_dateReceived","format","actionTakenForApproval","action_taken","act","act_status","actionTakenApproved","isEmpty","action_desired","actDesired1","actDesired","join","routing_remarks","act_taken","columnsForExport","col","getReport","filteredData","rep","start","end","isSameOrBefore","isSameOrAfter","com_controlNo","useEffect","isUndefined","com_id","getClassifications","fluid","md","data","exportHeaders","fileName","pagination","progressPending","progressComponent","persistTableHead"],"sourceRoot":""}