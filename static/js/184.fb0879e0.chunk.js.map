{"version":3,"file":"static/js/184.fb0879e0.chunk.js","mappings":"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","sources":["Pages/DTS/Inbox/Inbox.Logic.js","Pages/DTS/Inbox/Inbox.jsx"],"sourcesContent":["export function Tasks(tasks) {\r\n  this.getTasksArray = tasks;\r\n  this.getTasks = () => {\r\n    return (\r\n      <ul>\r\n        {this.getTasksArray.map((task, index) => {\r\n          switch (task) {\r\n            case \"addInitialRouting\":\r\n              return <li key={index}>Add Initial Routing</li>;\r\n            case \"addRoutingNote\":\r\n              return <li key={index}>Add Routing Note</li>;\r\n            case \"routeCommunication\":\r\n              return <li key={index}>Route Communication</li>;\r\n            case \"viewRouting\":\r\n              return <li key={index}>View Routing</li>;\r\n            case \"addAction\":\r\n              return <li key={index}>Add Action</li>;\r\n            case \"forRouting\":\r\n              return <li key={index}>For Routing</li>;\r\n            case \"reviewAction\":\r\n              return <li key={index}>Review Action Taken</li>;\r\n            case \"viewActionStatus\":\r\n              return <li key={index}>View action for revision</li>;\r\n            case \"reforwardForAction\":\r\n              return <li key={index}>Refoward communication</li>;\r\n            default:\r\n              return <li key={index}>View Communication</li>;\r\n          }\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n}\r\n","/*\r\n  View Communication Page\r\n*/\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Button, Spinner } from \"reactstrap\";\r\nimport {  ContentSearch, IconatedButton } from \"../../../Layouts/Portal\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { decrementNewInboxCount, getInbox, seenCommunication } from \"../../../features/dts/inbox/inboxSlice\";\r\nimport moment from \"moment\";\r\nimport { Tasks } from \"./Inbox.Logic\";\r\nimport { InboxLegends } from \"../../../Layouts/DTS\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { resetTaskCounter } from \"../../../features/dts/tasks/tasksSlice\";\r\nimport { BsArrowClockwise } from \"react-icons/bs\";\r\nimport './Inbox.css'\r\nconst _ = require('lodash');\r\n\r\n\r\nconst Inbox = () => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate()\r\n    const { inbox, isLoading } = useSelector(state => state.inbox)\r\n\r\n    const refreshInbox = () => {\r\n      dispatch(getInbox())\r\n    }\r\n\r\n    const viewTask = (row, e) => {\r\n      dispatch(resetTaskCounter())\r\n      if(_.isNull(row.inbox_date_seen)) {\r\n        e.target.parentElement.parentElement.setAttribute('style', 'font-weight: none;')\r\n        dispatch(decrementNewInboxCount())\r\n        dispatch(seenCommunication(row.inbox_id))\r\n      }\r\n      // navigate(`/dts/managementOfCommunications/inbox/viewCommunication/${row.inbox_id}/${row.com_id}`)\r\n      navigate(`/dts/managementOfCommunications/inbox/viewTask/${row.inbox_id}/${row.com_id}`)\r\n    }\r\n\r\n    const InboxExpand = ({props}) => {\r\n      const {\r\n        com_subject,\r\n        com_source_name,\r\n        com_source_position,\r\n        com_source_office,\r\n        com_dateReceived,\r\n        inbox_task,\r\n        com_dateCreated,\r\n        emp_firstname,\r\n        emp_lastname,\r\n        office_code\r\n      } = props.data;\r\n\r\n      const tasks = new Tasks(inbox_task).getTasks();\r\n      return (\r\n        <div className=\"p-3 bg-light text-dark\">\r\n          <strong>{com_subject}</strong>\r\n          <span className=\"d-block\">Source:&nbsp;<u><strong>{com_source_name}</strong>{`, ${com_source_position}, ${com_source_office}`}</u></span>\r\n          <span className=\"d-block\">Received:&nbsp;<i>{moment(com_dateReceived).format('MMMM D, YYYY hh:mm  A')}</i> </span>\r\n          <span className=\"d-block\">Created:&nbsp;<i>{moment(com_dateCreated).format('MMMM D, YYYY hh:mm  A')}</i> </span>\r\n          <span className=\"d-block\">Sent By:&nbsp;<i>{`${emp_firstname} ${emp_lastname} - ${office_code}`}</i> </span>\r\n          <span>Tasks: </span>\r\n          {tasks}\r\n          <Button size='sm' color=\"success\" onClick={(e) => viewTask(props.data, e)}>View Task</Button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    useEffect(() => {\r\n      dispatch(getInbox())\r\n    }, [dispatch])\r\n\r\n    const columns = [\r\n        {name : 'Control No', selector: (row) => row.com_controlNo, wrap: true, sortable: true,cell: (row) => {\r\n          if(_.isEmpty(searchValue)){\r\n            return row.com_controlNo;\r\n          }else{\r\n            return <Highlighter\r\n              highlightClassName=\"bg-super-light-green\"\r\n              searchWords={[searchValue]}\r\n              autoEscape={true}\r\n              textToHighlight={row.com_controlNo}\r\n            />\r\n          }\r\n        }},\r\n        {name : 'Subject', selector: (row) => row.com_subject},\r\n        // {name : 'Source', cell: (row) => `${row.com_source_name}, ${row.com_source_position}, ${row.com_source_office}`},\r\n        {name : 'From', cell: (row) => `${row.emp_firstname} ${row.emp_lastname} - ${row.office_code}`},\r\n        // {name : 'Date Sent', selector: (row) => row.inbox_date_sent, cell: (row) => moment(row.inbox_date_sent).format('dddd, MMMM Do YYYY hh:mm  A'), sortable: true},\r\n        {name : 'Tasks',  selector: (row) => row.inbox_task, wrap: true, cell: (row) => {\r\n           const tasks = new Tasks(row.inbox_task);\r\n           return tasks.getTasks()\r\n        } },\r\n        {name : 'Action',center: true, cell: (row) => <Button color=\"success\" size=\"sm\" onClick={\r\n          (e) => {\r\n            dispatch(resetTaskCounter())\r\n            if(_.isNull(row.inbox_date_seen)) {\r\n              e.target.parentElement.parentElement.setAttribute('style', 'font-weight: none;')\r\n              dispatch(decrementNewInboxCount())\r\n              dispatch(seenCommunication(row.inbox_id))\r\n            }\r\n            // navigate(`/dts/managementOfCommunications/inbox/viewCommunication/${row.inbox_id}/${row.com_id}`)\r\n            navigate(`/dts/managementOfCommunications/inbox/viewTask/${row.inbox_id}/${row.com_id}`)\r\n          }\r\n        }>View Task</Button>,},\r\n    ];\r\n\r\n    const data = inbox;\r\n\r\n    const filteredData = data.filter((inb) => {\r\n      return inb.com_controlNo.toLowerCase().includes(searchValue.toLocaleLowerCase());\r\n    });\r\n\r\n    const conditionalRowStyles = [\r\n        {\r\n            when: row => row.com_urgency === 'OMG',\r\n            classNames: ['bg-danger', 'text-light']\r\n        },\r\n        {\r\n            when: row => row.com_urgency === 'Rush',\r\n            classNames: ['bg-warning', 'text-dark']\r\n        },\r\n        {\r\n            when: row => row.com_urgency === 'Regular',\r\n            classNames: ['bg-light', 'text-dark']\r\n        },\r\n        {\r\n            when: row => row.inbox_date_seen === null,\r\n            style: {fontWeight: 'bold'}\r\n        }\r\n    ]\r\n\r\n    const onSearchValueChange = (e) => {\r\n      setSearchValue(e.target.value);\r\n    };\r\n\r\n    const clearSearch = () => {\r\n      setSearchValue(\"\");\r\n    };\r\n  \r\n\r\n    return (\r\n    <Container className=\"mt-3\">\r\n      <Row>\r\n        <div className=\"d-flex align-items-center\">\r\n          <h3>Inbox</h3>\r\n          <IconatedButton name='Refresh' className='ms-2' icon={<BsArrowClockwise />} onClick={refreshInbox} />\r\n        </div>\r\n        <Col md=\"12\">\r\n          <Row>\r\n            <Col md=\"6\">\r\n              <ContentSearch\r\n                placeholder={\"Enter control number...\"}\r\n                className=\"mb-3\"\r\n                onSearchValueChange={onSearchValueChange}\r\n                searchValue={searchValue}\r\n                clearSearch={clearSearch}\r\n              /> \r\n            </Col>\r\n            <Col>\r\n              <br />\r\n              <InboxLegends />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <div className=\"mt-2\"></div>\r\n          <DataTable\r\n            data={filteredData}\r\n            columns={columns}\r\n            highlightOnHover\r\n            pagination\r\n            progressPending={isLoading}\r\n            conditionalRowStyles={conditionalRowStyles}\r\n            expandableRows\r\n            responsive\r\n            expandableRowsComponent={(props) => <InboxExpand props={props} />}\r\n            expandOnRowClicked\r\n            progressComponent={\r\n              <Spinner />\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Inbox;\r\n "],"names":["Tasks","tasks","this","getTasksArray","getTasks","map","task","index","_","require","useState","searchValue","setSearchValue","dispatch","useDispatch","navigate","useNavigate","useSelector","state","inbox","isLoading","InboxExpand","props","data","com_subject","com_source_name","com_source_position","com_source_office","com_dateReceived","inbox_task","com_dateCreated","emp_firstname","emp_lastname","office_code","className","moment","format","size","color","onClick","e","row","resetTaskCounter","isNull","inbox_date_seen","target","parentElement","setAttribute","decrementNewInboxCount","seenCommunication","inbox_id","com_id","viewTask","useEffect","getInbox","columns","name","selector","com_controlNo","wrap","sortable","cell","isEmpty","highlightClassName","searchWords","autoEscape","textToHighlight","center","filteredData","filter","inb","toLowerCase","includes","toLocaleLowerCase","icon","md","placeholder","onSearchValueChange","value","clearSearch","highlightOnHover","pagination","progressPending","conditionalRowStyles","when","com_urgency","classNames","style","fontWeight","expandableRows","responsive","expandableRowsComponent","expandOnRowClicked","progressComponent"],"sourceRoot":""}