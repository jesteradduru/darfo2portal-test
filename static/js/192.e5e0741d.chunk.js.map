{"version":3,"file":"static/js/192.e5e0741d.chunk.js","mappings":"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","sources":["Pages/DTS/CommunicationLogs/CommunicationLogs.jsx","../node_modules/date-fns/esm/subDays/index.js"],"sourcesContent":["// Communication Logs Page\r\nimport React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { Col, Container, Row, Spinner, Collapse } from \"reactstrap\";\r\nimport { ContentSearch, IconatedButton } from \"../../../Layouts/Portal\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DataTableExtensions from \"react-data-table-component-extensions\";\r\nimport \"react-data-table-component-extensions/dist/index.css\";\r\nimport { getLogs } from \"../../../features/dts/logs/logsSlice\";\r\nimport { subDays } from \"date-fns\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport { BsFillCaretUpFill, BsFillCaretDownFill } from \"react-icons/bs\";\r\n\r\nconst _ = require(\"lodash\");\r\n\r\nconst CommunicationLogs = () => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const { logs, isLoading } = useSelector((state) => state.logs);\r\n  const [isOpen, toggle] = useState(false);\r\n  const [state, setState] = useState([ \r\n    {\r\n      startDate: subDays(new Date(), 1),\r\n      endDate: new Date(),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n\r\n  const onSearchValueChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const highlightMatchWords = (rowToMatch) => {\r\n    if (_.isEmpty(searchValue)) {\r\n      return rowToMatch;\r\n    } else {\r\n      return (\r\n        <Highlighter\r\n          highlightClassName=\"bg-warning\"\r\n          searchWords={[searchValue]}\r\n          autoEscape={true}\r\n          textToHighlight={rowToMatch}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"CONTROL NO\",\r\n      selector: (row) => row.com_controlNo,\r\n      wrap: true,\r\n      sortable: true,\r\n      cell: (row) => {\r\n        return highlightMatchWords(row.com_controlNo);\r\n      },\r\n    },\r\n    {\r\n      name: \"CLASSIFICATION\",\r\n      selector: (row) => row.class_name + \" \" + row.cat_name,\r\n      wrap: true,\r\n      cell: (row) => highlightMatchWords(row.class_name + \" \" + row.cat_name),\r\n    },\r\n    {\r\n      name: \"SUBJECT\",\r\n      selector: (row) => row.com_subject,\r\n      wrap: true,\r\n      cell: (row) => highlightMatchWords(row.com_subject),\r\n    },\r\n    {\r\n      name: \"SOURCE\",\r\n      cell: (row) =>\r\n        highlightMatchWords(\r\n          `${row.com_source_name}, ${row.com_source_position}, ${row.com_source_office}`\r\n        ),\r\n    },\r\n\r\n    {\r\n      name: \"ACTION\",\r\n      selector: (row) => row.trail_description,\r\n      cell: (row) => highlightMatchWords(row.trail_description),\r\n    },\r\n    {\r\n      name: \"BY\",\r\n      selector: (row) => row.trail_description,\r\n      cell: (row) =>\r\n        highlightMatchWords(\r\n          `${row.emp_firstname} ${row.emp_middlename[0]} ${row.emp_lastname} - ${row.office_code}`\r\n        ),\r\n    },\r\n    {\r\n      name: \"DATE\",\r\n      selector: (row) => moment(row.trail_date).format(\"DD-MM-YYYY hh:mmA\"),\r\n      cell: (row) =>\r\n        highlightMatchWords(moment(row.trail_date).format(\"DD-MM-YYYY hh:mmA\")),\r\n      sortable: true,\r\n    },\r\n  ];\r\n\r\n  const filteredData = logs.filter((com) => {\r\n    const start = moment(state[0].startDate).format(\"MM-DD-YYYY\");\r\n    const end = moment(state[0].endDate).format(\"MM-DD-YYYY\");\r\n\r\n    const searchResult =\r\n      com.com_controlNo\r\n        .toLowerCase()\r\n        .includes(searchValue.toLocaleLowerCase()) ||\r\n      com.com_subject.toLowerCase().includes(searchValue.toLocaleLowerCase()) ||\r\n      `${com.class_name} ${com.cat_name}`\r\n        .toLowerCase()\r\n        .includes(searchValue.toLocaleLowerCase()) ||\r\n      `${com.com_source_name}, ${com.com_source_position}, ${com.com_source_office}`\r\n        .toLowerCase()\r\n        .includes(searchValue.toLocaleLowerCase()) ||\r\n      `${com.emp_firstname} ${com.emp_middlename[0]} ${com.emp_lastname} - ${com.office_code}`\r\n        .toLowerCase()\r\n        .includes(searchValue.toLocaleLowerCase()) ||\r\n      moment(com.trail_date)\r\n        .format(\"DD-MM-YYYY hh:mmA\")\r\n        .toLowerCase()\r\n        .includes(searchValue.toLocaleLowerCase());\r\n\r\n    const dateRange =\r\n      moment(start).isSameOrBefore(\r\n        moment(com.trail_date).format(\"MM-DD-YYYY\")\r\n      ) &&\r\n      moment(end).isSameOrAfter(moment(com.trail_date).format(\"MM-DD-YYYY\"));\r\n\r\n    return searchResult && dateRange;\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getLogs());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <Row>\r\n            <h3>Communication Logs</h3>\r\n            <Col md=\"6\">\r\n              <ContentSearch\r\n                placeholder={\"Search\"}\r\n                className=\"mb-3\"\r\n                onSearchValueChange={onSearchValueChange}\r\n                searchValue={searchValue}\r\n                clearSearch={() => setSearchValue(\"\")}\r\n              />\r\n              <IconatedButton\r\n                className=\"mt-2\"\r\n                name=\"Communication Log Date Range\"\r\n                icon={isOpen ? <BsFillCaretUpFill /> : <BsFillCaretDownFill />}\r\n                onClick={() => toggle(!isOpen)}\r\n              />\r\n              <Collapse isOpen={isOpen}>\r\n                <DateRange\r\n                  editableDateInputs={true}\r\n                  onChange={(item) => setState([item.selection])}\r\n                  moveRangeOnFirstSelection={false}\r\n                  ranges={state} \r\n                />\r\n              </Collapse>\r\n            </Col>\r\n            <i> \r\n              Showing results from{\" \"}\r\n              {moment(state[0].startDate).format(\"DD-MM-YYYY\")} to{\" \"}\r\n              {moment(state[0].endDate).format(\"DD-MM-YYYY\")}\r\n            </i>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <DataTableExtensions\r\n            columns={columns}\r\n            data={filteredData}\r\n            exportHeaders={true}\r\n            filter={false}\r\n          >\r\n            <DataTable\r\n              columns={columns}\r\n              data={filteredData}\r\n              highlightOnHover\r\n              pagination\r\n              pointerOnHover\r\n              progressPending={isLoading}\r\n              progressComponent={<Spinner />}\r\n              persistTableHead\r\n            />\r\n          </DataTableExtensions>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CommunicationLogs;\r\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}"],"names":["_","require","useState","searchValue","setSearchValue","dispatch","useDispatch","useSelector","state","logs","isLoading","isOpen","toggle","startDate","subDays","Date","endDate","key","setState","highlightMatchWords","rowToMatch","isEmpty","highlightClassName","searchWords","autoEscape","textToHighlight","columns","name","selector","row","com_controlNo","wrap","sortable","cell","class_name","cat_name","com_subject","com_source_name","com_source_position","com_source_office","trail_description","emp_firstname","emp_middlename","emp_lastname","office_code","moment","trail_date","format","filteredData","filter","com","start","end","searchResult","toLowerCase","includes","toLocaleLowerCase","dateRange","isSameOrBefore","isSameOrAfter","useEffect","getLogs","className","md","placeholder","onSearchValueChange","e","target","value","clearSearch","icon","onClick","editableDateInputs","onChange","item","selection","moveRangeOnFirstSelection","ranges","data","exportHeaders","highlightOnHover","pagination","pointerOnHover","progressPending","progressComponent","persistTableHead","dirtyDate","dirtyAmount","requiredArgs","arguments","amount","toInteger","addDays"],"sourceRoot":""}